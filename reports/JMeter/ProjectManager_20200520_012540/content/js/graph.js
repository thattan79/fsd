/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? 19800000 : 0;
        var yOffset = options.yaxis.mode === "time" ? 19800000 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 4000.0, "minX": 0.0, "maxY": 4915.0, "series": [{"data": [[0.0, 4000.0], [0.1, 4001.0], [0.2, 4001.0], [0.3, 4001.0], [0.4, 4001.0], [0.5, 4001.0], [0.6, 4001.0], [0.7, 4001.0], [0.8, 4001.0], [0.9, 4001.0], [1.0, 4001.0], [1.1, 4001.0], [1.2, 4001.0], [1.3, 4001.0], [1.4, 4001.0], [1.5, 4001.0], [1.6, 4001.0], [1.7, 4001.0], [1.8, 4001.0], [1.9, 4001.0], [2.0, 4001.0], [2.1, 4001.0], [2.2, 4001.0], [2.3, 4001.0], [2.4, 4001.0], [2.5, 4001.0], [2.6, 4001.0], [2.7, 4001.0], [2.8, 4001.0], [2.9, 4001.0], [3.0, 4001.0], [3.1, 4001.0], [3.2, 4001.0], [3.3, 4001.0], [3.4, 4001.0], [3.5, 4001.0], [3.6, 4001.0], [3.7, 4001.0], [3.8, 4001.0], [3.9, 4001.0], [4.0, 4001.0], [4.1, 4002.0], [4.2, 4002.0], [4.3, 4002.0], [4.4, 4002.0], [4.5, 4002.0], [4.6, 4002.0], [4.7, 4002.0], [4.8, 4002.0], [4.9, 4002.0], [5.0, 4002.0], [5.1, 4002.0], [5.2, 4002.0], [5.3, 4002.0], [5.4, 4002.0], [5.5, 4002.0], [5.6, 4002.0], [5.7, 4002.0], [5.8, 4002.0], [5.9, 4002.0], [6.0, 4002.0], [6.1, 4002.0], [6.2, 4002.0], [6.3, 4002.0], [6.4, 4002.0], [6.5, 4002.0], [6.6, 4002.0], [6.7, 4002.0], [6.8, 4002.0], [6.9, 4002.0], [7.0, 4002.0], [7.1, 4002.0], [7.2, 4002.0], [7.3, 4002.0], [7.4, 4002.0], [7.5, 4002.0], [7.6, 4002.0], [7.7, 4002.0], [7.8, 4002.0], [7.9, 4002.0], [8.0, 4002.0], [8.1, 4002.0], [8.2, 4002.0], [8.3, 4002.0], [8.4, 4002.0], [8.5, 4002.0], [8.6, 4002.0], [8.7, 4002.0], [8.8, 4002.0], [8.9, 4002.0], [9.0, 4002.0], [9.1, 4002.0], [9.2, 4002.0], [9.3, 4002.0], [9.4, 4002.0], [9.5, 4002.0], [9.6, 4002.0], [9.7, 4002.0], [9.8, 4002.0], [9.9, 4002.0], [10.0, 4002.0], [10.1, 4002.0], [10.2, 4002.0], [10.3, 4002.0], [10.4, 4002.0], [10.5, 4002.0], [10.6, 4002.0], [10.7, 4002.0], [10.8, 4002.0], [10.9, 4002.0], [11.0, 4002.0], [11.1, 4002.0], [11.2, 4002.0], [11.3, 4002.0], [11.4, 4002.0], [11.5, 4002.0], [11.6, 4002.0], [11.7, 4002.0], [11.8, 4002.0], [11.9, 4002.0], [12.0, 4002.0], [12.1, 4002.0], [12.2, 4002.0], [12.3, 4002.0], [12.4, 4002.0], [12.5, 4002.0], [12.6, 4002.0], [12.7, 4002.0], [12.8, 4002.0], [12.9, 4002.0], [13.0, 4002.0], [13.1, 4003.0], [13.2, 4003.0], [13.3, 4003.0], [13.4, 4003.0], [13.5, 4003.0], [13.6, 4003.0], [13.7, 4003.0], [13.8, 4003.0], [13.9, 4003.0], [14.0, 4003.0], [14.1, 4003.0], [14.2, 4003.0], [14.3, 4003.0], [14.4, 4003.0], [14.5, 4003.0], [14.6, 4003.0], [14.7, 4003.0], [14.8, 4003.0], [14.9, 4003.0], [15.0, 4003.0], [15.1, 4003.0], [15.2, 4003.0], [15.3, 4003.0], [15.4, 4003.0], [15.5, 4003.0], [15.6, 4003.0], [15.7, 4003.0], [15.8, 4003.0], [15.9, 4003.0], [16.0, 4003.0], [16.1, 4003.0], [16.2, 4003.0], [16.3, 4003.0], [16.4, 4003.0], [16.5, 4003.0], [16.6, 4003.0], [16.7, 4003.0], [16.8, 4003.0], [16.9, 4003.0], [17.0, 4003.0], [17.1, 4003.0], [17.2, 4003.0], [17.3, 4003.0], [17.4, 4003.0], [17.5, 4003.0], [17.6, 4003.0], [17.7, 4003.0], [17.8, 4003.0], [17.9, 4003.0], [18.0, 4003.0], [18.1, 4003.0], [18.2, 4003.0], [18.3, 4003.0], [18.4, 4003.0], [18.5, 4003.0], [18.6, 4003.0], [18.7, 4003.0], [18.8, 4003.0], [18.9, 4003.0], [19.0, 4003.0], [19.1, 4003.0], [19.2, 4003.0], [19.3, 4003.0], [19.4, 4003.0], [19.5, 4003.0], [19.6, 4003.0], [19.7, 4003.0], [19.8, 4003.0], [19.9, 4003.0], [20.0, 4003.0], [20.1, 4003.0], [20.2, 4003.0], [20.3, 4003.0], [20.4, 4003.0], [20.5, 4003.0], [20.6, 4003.0], [20.7, 4003.0], [20.8, 4003.0], [20.9, 4003.0], [21.0, 4003.0], [21.1, 4003.0], [21.2, 4003.0], [21.3, 4003.0], [21.4, 4003.0], [21.5, 4003.0], [21.6, 4003.0], [21.7, 4003.0], [21.8, 4003.0], [21.9, 4003.0], [22.0, 4003.0], [22.1, 4003.0], [22.2, 4003.0], [22.3, 4003.0], [22.4, 4003.0], [22.5, 4003.0], [22.6, 4004.0], [22.7, 4004.0], [22.8, 4004.0], [22.9, 4004.0], [23.0, 4004.0], [23.1, 4004.0], [23.2, 4004.0], [23.3, 4004.0], [23.4, 4004.0], [23.5, 4004.0], [23.6, 4004.0], [23.7, 4004.0], [23.8, 4004.0], [23.9, 4004.0], [24.0, 4004.0], [24.1, 4004.0], [24.2, 4004.0], [24.3, 4004.0], [24.4, 4004.0], [24.5, 4004.0], [24.6, 4004.0], [24.7, 4004.0], [24.8, 4004.0], [24.9, 4004.0], [25.0, 4004.0], [25.1, 4004.0], [25.2, 4004.0], [25.3, 4004.0], [25.4, 4004.0], [25.5, 4004.0], [25.6, 4004.0], [25.7, 4004.0], [25.8, 4004.0], [25.9, 4004.0], [26.0, 4004.0], [26.1, 4004.0], [26.2, 4004.0], [26.3, 4004.0], [26.4, 4004.0], [26.5, 4004.0], [26.6, 4004.0], [26.7, 4004.0], [26.8, 4004.0], [26.9, 4004.0], [27.0, 4004.0], [27.1, 4004.0], [27.2, 4004.0], [27.3, 4004.0], [27.4, 4004.0], [27.5, 4004.0], [27.6, 4004.0], [27.7, 4004.0], [27.8, 4004.0], [27.9, 4004.0], [28.0, 4004.0], [28.1, 4004.0], [28.2, 4004.0], [28.3, 4004.0], [28.4, 4004.0], [28.5, 4004.0], [28.6, 4004.0], [28.7, 4004.0], [28.8, 4004.0], [28.9, 4004.0], [29.0, 4004.0], [29.1, 4004.0], [29.2, 4004.0], [29.3, 4004.0], [29.4, 4004.0], [29.5, 4004.0], [29.6, 4004.0], [29.7, 4004.0], [29.8, 4004.0], [29.9, 4004.0], [30.0, 4004.0], [30.1, 4004.0], [30.2, 4004.0], [30.3, 4004.0], [30.4, 4004.0], [30.5, 4004.0], [30.6, 4004.0], [30.7, 4004.0], [30.8, 4004.0], [30.9, 4004.0], [31.0, 4004.0], [31.1, 4004.0], [31.2, 4004.0], [31.3, 4004.0], [31.4, 4004.0], [31.5, 4005.0], [31.6, 4005.0], [31.7, 4005.0], [31.8, 4005.0], [31.9, 4005.0], [32.0, 4005.0], [32.1, 4005.0], [32.2, 4005.0], [32.3, 4005.0], [32.4, 4005.0], [32.5, 4005.0], [32.6, 4005.0], [32.7, 4005.0], [32.8, 4005.0], [32.9, 4005.0], [33.0, 4005.0], [33.1, 4005.0], [33.2, 4005.0], [33.3, 4005.0], [33.4, 4005.0], [33.5, 4005.0], [33.6, 4005.0], [33.7, 4005.0], [33.8, 4005.0], [33.9, 4005.0], [34.0, 4005.0], [34.1, 4005.0], [34.2, 4005.0], [34.3, 4005.0], [34.4, 4005.0], [34.5, 4005.0], [34.6, 4005.0], [34.7, 4005.0], [34.8, 4005.0], [34.9, 4005.0], [35.0, 4005.0], [35.1, 4005.0], [35.2, 4005.0], [35.3, 4005.0], [35.4, 4005.0], [35.5, 4005.0], [35.6, 4005.0], [35.7, 4005.0], [35.8, 4005.0], [35.9, 4005.0], [36.0, 4005.0], [36.1, 4005.0], [36.2, 4005.0], [36.3, 4005.0], [36.4, 4005.0], [36.5, 4005.0], [36.6, 4005.0], [36.7, 4005.0], [36.8, 4005.0], [36.9, 4005.0], [37.0, 4005.0], [37.1, 4005.0], [37.2, 4005.0], [37.3, 4005.0], [37.4, 4005.0], [37.5, 4005.0], [37.6, 4005.0], [37.7, 4006.0], [37.8, 4006.0], [37.9, 4006.0], [38.0, 4006.0], [38.1, 4006.0], [38.2, 4006.0], [38.3, 4006.0], [38.4, 4006.0], [38.5, 4006.0], [38.6, 4006.0], [38.7, 4006.0], [38.8, 4006.0], [38.9, 4006.0], [39.0, 4006.0], [39.1, 4006.0], [39.2, 4006.0], [39.3, 4006.0], [39.4, 4006.0], [39.5, 4006.0], [39.6, 4006.0], [39.7, 4006.0], [39.8, 4006.0], [39.9, 4006.0], [40.0, 4006.0], [40.1, 4006.0], [40.2, 4006.0], [40.3, 4006.0], [40.4, 4006.0], [40.5, 4006.0], [40.6, 4006.0], [40.7, 4006.0], [40.8, 4006.0], [40.9, 4006.0], [41.0, 4006.0], [41.1, 4006.0], [41.2, 4006.0], [41.3, 4006.0], [41.4, 4007.0], [41.5, 4007.0], [41.6, 4007.0], [41.7, 4007.0], [41.8, 4007.0], [41.9, 4007.0], [42.0, 4007.0], [42.1, 4007.0], [42.2, 4007.0], [42.3, 4007.0], [42.4, 4007.0], [42.5, 4007.0], [42.6, 4007.0], [42.7, 4007.0], [42.8, 4007.0], [42.9, 4007.0], [43.0, 4007.0], [43.1, 4007.0], [43.2, 4007.0], [43.3, 4007.0], [43.4, 4007.0], [43.5, 4007.0], [43.6, 4008.0], [43.7, 4008.0], [43.8, 4008.0], [43.9, 4008.0], [44.0, 4008.0], [44.1, 4008.0], [44.2, 4008.0], [44.3, 4008.0], [44.4, 4008.0], [44.5, 4008.0], [44.6, 4008.0], [44.7, 4008.0], [44.8, 4008.0], [44.9, 4008.0], [45.0, 4008.0], [45.1, 4008.0], [45.2, 4008.0], [45.3, 4008.0], [45.4, 4008.0], [45.5, 4008.0], [45.6, 4008.0], [45.7, 4008.0], [45.8, 4008.0], [45.9, 4009.0], [46.0, 4009.0], [46.1, 4009.0], [46.2, 4009.0], [46.3, 4009.0], [46.4, 4009.0], [46.5, 4009.0], [46.6, 4009.0], [46.7, 4009.0], [46.8, 4009.0], [46.9, 4009.0], [47.0, 4009.0], [47.1, 4009.0], [47.2, 4009.0], [47.3, 4009.0], [47.4, 4009.0], [47.5, 4009.0], [47.6, 4009.0], [47.7, 4009.0], [47.8, 4009.0], [47.9, 4009.0], [48.0, 4009.0], [48.1, 4010.0], [48.2, 4010.0], [48.3, 4010.0], [48.4, 4010.0], [48.5, 4010.0], [48.6, 4010.0], [48.7, 4010.0], [48.8, 4010.0], [48.9, 4010.0], [49.0, 4010.0], [49.1, 4010.0], [49.2, 4010.0], [49.3, 4010.0], [49.4, 4011.0], [49.5, 4011.0], [49.6, 4011.0], [49.7, 4011.0], [49.8, 4011.0], [49.9, 4011.0], [50.0, 4011.0], [50.1, 4011.0], [50.2, 4011.0], [50.3, 4011.0], [50.4, 4011.0], [50.5, 4011.0], [50.6, 4011.0], [50.7, 4011.0], [50.8, 4011.0], [50.9, 4011.0], [51.0, 4011.0], [51.1, 4012.0], [51.2, 4012.0], [51.3, 4012.0], [51.4, 4012.0], [51.5, 4012.0], [51.6, 4012.0], [51.7, 4012.0], [51.8, 4012.0], [51.9, 4012.0], [52.0, 4012.0], [52.1, 4012.0], [52.2, 4012.0], [52.3, 4012.0], [52.4, 4012.0], [52.5, 4012.0], [52.6, 4012.0], [52.7, 4012.0], [52.8, 4012.0], [52.9, 4013.0], [53.0, 4013.0], [53.1, 4013.0], [53.2, 4013.0], [53.3, 4013.0], [53.4, 4013.0], [53.5, 4013.0], [53.6, 4014.0], [53.7, 4014.0], [53.8, 4014.0], [53.9, 4014.0], [54.0, 4014.0], [54.1, 4014.0], [54.2, 4014.0], [54.3, 4014.0], [54.4, 4015.0], [54.5, 4015.0], [54.6, 4015.0], [54.7, 4015.0], [54.8, 4015.0], [54.9, 4015.0], [55.0, 4016.0], [55.1, 4016.0], [55.2, 4016.0], [55.3, 4016.0], [55.4, 4016.0], [55.5, 4016.0], [55.6, 4016.0], [55.7, 4016.0], [55.8, 4016.0], [55.9, 4016.0], [56.0, 4016.0], [56.1, 4016.0], [56.2, 4017.0], [56.3, 4017.0], [56.4, 4017.0], [56.5, 4017.0], [56.6, 4017.0], [56.7, 4017.0], [56.8, 4017.0], [56.9, 4017.0], [57.0, 4017.0], [57.1, 4017.0], [57.2, 4018.0], [57.3, 4018.0], [57.4, 4018.0], [57.5, 4019.0], [57.6, 4019.0], [57.7, 4019.0], [57.8, 4019.0], [57.9, 4019.0], [58.0, 4019.0], [58.1, 4019.0], [58.2, 4019.0], [58.3, 4019.0], [58.4, 4019.0], [58.5, 4019.0], [58.6, 4019.0], [58.7, 4020.0], [58.8, 4020.0], [58.9, 4020.0], [59.0, 4020.0], [59.1, 4020.0], [59.2, 4020.0], [59.3, 4020.0], [59.4, 4020.0], [59.5, 4020.0], [59.6, 4021.0], [59.7, 4021.0], [59.8, 4021.0], [59.9, 4021.0], [60.0, 4021.0], [60.1, 4021.0], [60.2, 4021.0], [60.3, 4021.0], [60.4, 4022.0], [60.5, 4022.0], [60.6, 4022.0], [60.7, 4022.0], [60.8, 4022.0], [60.9, 4022.0], [61.0, 4022.0], [61.1, 4023.0], [61.2, 4023.0], [61.3, 4023.0], [61.4, 4023.0], [61.5, 4024.0], [61.6, 4024.0], [61.7, 4024.0], [61.8, 4024.0], [61.9, 4024.0], [62.0, 4024.0], [62.1, 4024.0], [62.2, 4024.0], [62.3, 4024.0], [62.4, 4025.0], [62.5, 4025.0], [62.6, 4025.0], [62.7, 4025.0], [62.8, 4025.0], [62.9, 4025.0], [63.0, 4025.0], [63.1, 4026.0], [63.2, 4026.0], [63.3, 4026.0], [63.4, 4026.0], [63.5, 4026.0], [63.6, 4026.0], [63.7, 4026.0], [63.8, 4026.0], [63.9, 4027.0], [64.0, 4027.0], [64.1, 4027.0], [64.2, 4027.0], [64.3, 4028.0], [64.4, 4028.0], [64.5, 4028.0], [64.6, 4029.0], [64.7, 4029.0], [64.8, 4029.0], [64.9, 4030.0], [65.0, 4030.0], [65.1, 4030.0], [65.2, 4030.0], [65.3, 4031.0], [65.4, 4031.0], [65.5, 4031.0], [65.6, 4031.0], [65.7, 4031.0], [65.8, 4032.0], [65.9, 4032.0], [66.0, 4032.0], [66.1, 4032.0], [66.2, 4032.0], [66.3, 4033.0], [66.4, 4033.0], [66.5, 4034.0], [66.6, 4034.0], [66.7, 4034.0], [66.8, 4034.0], [66.9, 4035.0], [67.0, 4036.0], [67.1, 4036.0], [67.2, 4036.0], [67.3, 4037.0], [67.4, 4037.0], [67.5, 4037.0], [67.6, 4037.0], [67.7, 4037.0], [67.8, 4037.0], [67.9, 4038.0], [68.0, 4038.0], [68.1, 4038.0], [68.2, 4039.0], [68.3, 4040.0], [68.4, 4041.0], [68.5, 4041.0], [68.6, 4042.0], [68.7, 4042.0], [68.8, 4042.0], [68.9, 4043.0], [69.0, 4043.0], [69.1, 4043.0], [69.2, 4043.0], [69.3, 4044.0], [69.4, 4044.0], [69.5, 4044.0], [69.6, 4045.0], [69.7, 4045.0], [69.8, 4045.0], [69.9, 4045.0], [70.0, 4045.0], [70.1, 4046.0], [70.2, 4046.0], [70.3, 4047.0], [70.4, 4048.0], [70.5, 4048.0], [70.6, 4049.0], [70.7, 4049.0], [70.8, 4050.0], [70.9, 4050.0], [71.0, 4050.0], [71.1, 4052.0], [71.2, 4052.0], [71.3, 4052.0], [71.4, 4053.0], [71.5, 4053.0], [71.6, 4054.0], [71.7, 4054.0], [71.8, 4054.0], [71.9, 4054.0], [72.0, 4054.0], [72.1, 4055.0], [72.2, 4055.0], [72.3, 4055.0], [72.4, 4055.0], [72.5, 4056.0], [72.6, 4056.0], [72.7, 4056.0], [72.8, 4056.0], [72.9, 4056.0], [73.0, 4057.0], [73.1, 4057.0], [73.2, 4057.0], [73.3, 4058.0], [73.4, 4058.0], [73.5, 4058.0], [73.6, 4058.0], [73.7, 4058.0], [73.8, 4058.0], [73.9, 4058.0], [74.0, 4058.0], [74.1, 4059.0], [74.2, 4059.0], [74.3, 4059.0], [74.4, 4059.0], [74.5, 4059.0], [74.6, 4059.0], [74.7, 4060.0], [74.8, 4060.0], [74.9, 4060.0], [75.0, 4060.0], [75.1, 4061.0], [75.2, 4061.0], [75.3, 4061.0], [75.4, 4062.0], [75.5, 4063.0], [75.6, 4063.0], [75.7, 4063.0], [75.8, 4063.0], [75.9, 4063.0], [76.0, 4063.0], [76.1, 4063.0], [76.2, 4064.0], [76.3, 4064.0], [76.4, 4064.0], [76.5, 4065.0], [76.6, 4065.0], [76.7, 4065.0], [76.8, 4065.0], [76.9, 4065.0], [77.0, 4065.0], [77.1, 4066.0], [77.2, 4066.0], [77.3, 4066.0], [77.4, 4066.0], [77.5, 4067.0], [77.6, 4067.0], [77.7, 4067.0], [77.8, 4067.0], [77.9, 4067.0], [78.0, 4067.0], [78.1, 4067.0], [78.2, 4068.0], [78.3, 4068.0], [78.4, 4068.0], [78.5, 4068.0], [78.6, 4069.0], [78.7, 4069.0], [78.8, 4069.0], [78.9, 4070.0], [79.0, 4070.0], [79.1, 4070.0], [79.2, 4071.0], [79.3, 4071.0], [79.4, 4072.0], [79.5, 4072.0], [79.6, 4073.0], [79.7, 4073.0], [79.8, 4073.0], [79.9, 4073.0], [80.0, 4074.0], [80.1, 4074.0], [80.2, 4076.0], [80.3, 4076.0], [80.4, 4076.0], [80.5, 4079.0], [80.6, 4079.0], [80.7, 4079.0], [80.8, 4081.0], [80.9, 4081.0], [81.0, 4081.0], [81.1, 4081.0], [81.2, 4082.0], [81.3, 4083.0], [81.4, 4084.0], [81.5, 4085.0], [81.6, 4086.0], [81.7, 4086.0], [81.8, 4087.0], [81.9, 4090.0], [82.0, 4092.0], [82.1, 4092.0], [82.2, 4093.0], [82.3, 4099.0], [82.4, 4103.0], [82.5, 4105.0], [82.6, 4108.0], [82.7, 4110.0], [82.8, 4110.0], [82.9, 4111.0], [83.0, 4111.0], [83.1, 4113.0], [83.2, 4115.0], [83.3, 4115.0], [83.4, 4116.0], [83.5, 4117.0], [83.6, 4118.0], [83.7, 4118.0], [83.8, 4118.0], [83.9, 4121.0], [84.0, 4121.0], [84.1, 4123.0], [84.2, 4124.0], [84.3, 4124.0], [84.4, 4125.0], [84.5, 4125.0], [84.6, 4127.0], [84.7, 4129.0], [84.8, 4129.0], [84.9, 4129.0], [85.0, 4132.0], [85.1, 4133.0], [85.2, 4135.0], [85.3, 4137.0], [85.4, 4138.0], [85.5, 4141.0], [85.6, 4141.0], [85.7, 4141.0], [85.8, 4142.0], [85.9, 4143.0], [86.0, 4143.0], [86.1, 4146.0], [86.2, 4146.0], [86.3, 4146.0], [86.4, 4146.0], [86.5, 4147.0], [86.6, 4148.0], [86.7, 4149.0], [86.8, 4149.0], [86.9, 4149.0], [87.0, 4149.0], [87.1, 4149.0], [87.2, 4151.0], [87.3, 4152.0], [87.4, 4152.0], [87.5, 4153.0], [87.6, 4156.0], [87.7, 4157.0], [87.8, 4157.0], [87.9, 4158.0], [88.0, 4160.0], [88.1, 4161.0], [88.2, 4162.0], [88.3, 4163.0], [88.4, 4163.0], [88.5, 4163.0], [88.6, 4164.0], [88.7, 4165.0], [88.8, 4167.0], [88.9, 4168.0], [89.0, 4169.0], [89.1, 4171.0], [89.2, 4172.0], [89.3, 4173.0], [89.4, 4174.0], [89.5, 4175.0], [89.6, 4175.0], [89.7, 4175.0], [89.8, 4176.0], [89.9, 4176.0], [90.0, 4176.0], [90.1, 4177.0], [90.2, 4178.0], [90.3, 4178.0], [90.4, 4179.0], [90.5, 4180.0], [90.6, 4180.0], [90.7, 4181.0], [90.8, 4181.0], [90.9, 4183.0], [91.0, 4183.0], [91.1, 4183.0], [91.2, 4184.0], [91.3, 4185.0], [91.4, 4185.0], [91.5, 4185.0], [91.6, 4185.0], [91.7, 4186.0], [91.8, 4187.0], [91.9, 4187.0], [92.0, 4188.0], [92.1, 4189.0], [92.2, 4190.0], [92.3, 4190.0], [92.4, 4190.0], [92.5, 4193.0], [92.6, 4194.0], [92.7, 4194.0], [92.8, 4194.0], [92.9, 4195.0], [93.0, 4196.0], [93.1, 4198.0], [93.2, 4200.0], [93.3, 4200.0], [93.4, 4200.0], [93.5, 4202.0], [93.6, 4203.0], [93.7, 4204.0], [93.8, 4206.0], [93.9, 4206.0], [94.0, 4209.0], [94.1, 4216.0], [94.2, 4224.0], [94.3, 4224.0], [94.4, 4225.0], [94.5, 4226.0], [94.6, 4227.0], [94.7, 4234.0], [94.8, 4243.0], [94.9, 4244.0], [95.0, 4247.0], [95.1, 4247.0], [95.2, 4249.0], [95.3, 4249.0], [95.4, 4250.0], [95.5, 4295.0], [95.6, 4296.0], [95.7, 4296.0], [95.8, 4296.0], [95.9, 4296.0], [96.0, 4297.0], [96.1, 4304.0], [96.2, 4338.0], [96.3, 4346.0], [96.4, 4403.0], [96.5, 4451.0], [96.6, 4452.0], [96.7, 4454.0], [96.8, 4456.0], [96.9, 4459.0], [97.0, 4460.0], [97.1, 4463.0], [97.2, 4467.0], [97.3, 4505.0], [97.4, 4511.0], [97.5, 4512.0], [97.6, 4513.0], [97.7, 4513.0], [97.8, 4514.0], [97.9, 4514.0], [98.0, 4516.0], [98.1, 4517.0], [98.2, 4518.0], [98.3, 4520.0], [98.4, 4520.0], [98.5, 4521.0], [98.6, 4522.0], [98.7, 4522.0], [98.8, 4523.0], [98.9, 4525.0], [99.0, 4527.0], [99.1, 4529.0], [99.2, 4531.0], [99.3, 4532.0], [99.4, 4533.0], [99.5, 4534.0], [99.6, 4535.0], [99.7, 4536.0], [99.8, 4537.0], [99.9, 4538.0]], "isOverall": false, "label": "All_projects", "isController": false}, {"data": [[0.0, 4000.0], [0.1, 4000.0], [0.2, 4000.0], [0.3, 4000.0], [0.4, 4000.0], [0.5, 4000.0], [0.6, 4000.0], [0.7, 4000.0], [0.8, 4001.0], [0.9, 4001.0], [1.0, 4001.0], [1.1, 4001.0], [1.2, 4001.0], [1.3, 4001.0], [1.4, 4001.0], [1.5, 4001.0], [1.6, 4001.0], [1.7, 4001.0], [1.8, 4001.0], [1.9, 4001.0], [2.0, 4001.0], [2.1, 4001.0], [2.2, 4001.0], [2.3, 4001.0], [2.4, 4001.0], [2.5, 4001.0], [2.6, 4001.0], [2.7, 4001.0], [2.8, 4001.0], [2.9, 4001.0], [3.0, 4001.0], [3.1, 4001.0], [3.2, 4001.0], [3.3, 4001.0], [3.4, 4001.0], [3.5, 4001.0], [3.6, 4001.0], [3.7, 4001.0], [3.8, 4001.0], [3.9, 4001.0], [4.0, 4001.0], [4.1, 4001.0], [4.2, 4001.0], [4.3, 4001.0], [4.4, 4001.0], [4.5, 4001.0], [4.6, 4001.0], [4.7, 4001.0], [4.8, 4001.0], [4.9, 4001.0], [5.0, 4001.0], [5.1, 4001.0], [5.2, 4001.0], [5.3, 4001.0], [5.4, 4001.0], [5.5, 4001.0], [5.6, 4001.0], [5.7, 4001.0], [5.8, 4001.0], [5.9, 4001.0], [6.0, 4001.0], [6.1, 4001.0], [6.2, 4001.0], [6.3, 4001.0], [6.4, 4001.0], [6.5, 4001.0], [6.6, 4001.0], [6.7, 4001.0], [6.8, 4002.0], [6.9, 4002.0], [7.0, 4002.0], [7.1, 4002.0], [7.2, 4002.0], [7.3, 4002.0], [7.4, 4002.0], [7.5, 4002.0], [7.6, 4002.0], [7.7, 4002.0], [7.8, 4002.0], [7.9, 4002.0], [8.0, 4002.0], [8.1, 4002.0], [8.2, 4002.0], [8.3, 4002.0], [8.4, 4002.0], [8.5, 4002.0], [8.6, 4002.0], [8.7, 4002.0], [8.8, 4002.0], [8.9, 4002.0], [9.0, 4002.0], [9.1, 4002.0], [9.2, 4002.0], [9.3, 4002.0], [9.4, 4002.0], [9.5, 4002.0], [9.6, 4002.0], [9.7, 4002.0], [9.8, 4002.0], [9.9, 4002.0], [10.0, 4002.0], [10.1, 4002.0], [10.2, 4002.0], [10.3, 4002.0], [10.4, 4002.0], [10.5, 4002.0], [10.6, 4002.0], [10.7, 4002.0], [10.8, 4002.0], [10.9, 4002.0], [11.0, 4002.0], [11.1, 4002.0], [11.2, 4002.0], [11.3, 4002.0], [11.4, 4002.0], [11.5, 4002.0], [11.6, 4002.0], [11.7, 4002.0], [11.8, 4002.0], [11.9, 4002.0], [12.0, 4002.0], [12.1, 4002.0], [12.2, 4002.0], [12.3, 4002.0], [12.4, 4002.0], [12.5, 4002.0], [12.6, 4002.0], [12.7, 4002.0], [12.8, 4002.0], [12.9, 4002.0], [13.0, 4002.0], [13.1, 4002.0], [13.2, 4002.0], [13.3, 4002.0], [13.4, 4002.0], [13.5, 4002.0], [13.6, 4002.0], [13.7, 4002.0], [13.8, 4002.0], [13.9, 4002.0], [14.0, 4002.0], [14.1, 4002.0], [14.2, 4002.0], [14.3, 4002.0], [14.4, 4002.0], [14.5, 4002.0], [14.6, 4002.0], [14.7, 4002.0], [14.8, 4002.0], [14.9, 4002.0], [15.0, 4002.0], [15.1, 4002.0], [15.2, 4002.0], [15.3, 4002.0], [15.4, 4002.0], [15.5, 4002.0], [15.6, 4002.0], [15.7, 4002.0], [15.8, 4002.0], [15.9, 4002.0], [16.0, 4002.0], [16.1, 4002.0], [16.2, 4002.0], [16.3, 4002.0], [16.4, 4002.0], [16.5, 4002.0], [16.6, 4002.0], [16.7, 4002.0], [16.8, 4002.0], [16.9, 4002.0], [17.0, 4002.0], [17.1, 4002.0], [17.2, 4002.0], [17.3, 4002.0], [17.4, 4002.0], [17.5, 4002.0], [17.6, 4002.0], [17.7, 4002.0], [17.8, 4002.0], [17.9, 4002.0], [18.0, 4002.0], [18.1, 4002.0], [18.2, 4002.0], [18.3, 4002.0], [18.4, 4002.0], [18.5, 4002.0], [18.6, 4002.0], [18.7, 4002.0], [18.8, 4002.0], [18.9, 4002.0], [19.0, 4002.0], [19.1, 4002.0], [19.2, 4002.0], [19.3, 4002.0], [19.4, 4002.0], [19.5, 4002.0], [19.6, 4002.0], [19.7, 4002.0], [19.8, 4002.0], [19.9, 4002.0], [20.0, 4002.0], [20.1, 4002.0], [20.2, 4002.0], [20.3, 4003.0], [20.4, 4003.0], [20.5, 4003.0], [20.6, 4003.0], [20.7, 4003.0], [20.8, 4003.0], [20.9, 4003.0], [21.0, 4003.0], [21.1, 4003.0], [21.2, 4003.0], [21.3, 4003.0], [21.4, 4003.0], [21.5, 4003.0], [21.6, 4003.0], [21.7, 4003.0], [21.8, 4003.0], [21.9, 4003.0], [22.0, 4003.0], [22.1, 4003.0], [22.2, 4003.0], [22.3, 4003.0], [22.4, 4003.0], [22.5, 4003.0], [22.6, 4003.0], [22.7, 4003.0], [22.8, 4003.0], [22.9, 4003.0], [23.0, 4003.0], [23.1, 4003.0], [23.2, 4003.0], [23.3, 4003.0], [23.4, 4003.0], [23.5, 4003.0], [23.6, 4003.0], [23.7, 4003.0], [23.8, 4003.0], [23.9, 4003.0], [24.0, 4003.0], [24.1, 4003.0], [24.2, 4003.0], [24.3, 4003.0], [24.4, 4003.0], [24.5, 4003.0], [24.6, 4003.0], [24.7, 4003.0], [24.8, 4003.0], [24.9, 4003.0], [25.0, 4003.0], [25.1, 4003.0], [25.2, 4003.0], [25.3, 4003.0], [25.4, 4003.0], [25.5, 4003.0], [25.6, 4003.0], [25.7, 4003.0], [25.8, 4003.0], [25.9, 4003.0], [26.0, 4003.0], [26.1, 4003.0], [26.2, 4003.0], [26.3, 4003.0], [26.4, 4003.0], [26.5, 4003.0], [26.6, 4003.0], [26.7, 4003.0], [26.8, 4003.0], [26.9, 4003.0], [27.0, 4003.0], [27.1, 4003.0], [27.2, 4003.0], [27.3, 4003.0], [27.4, 4003.0], [27.5, 4003.0], [27.6, 4003.0], [27.7, 4003.0], [27.8, 4003.0], [27.9, 4003.0], [28.0, 4003.0], [28.1, 4003.0], [28.2, 4003.0], [28.3, 4003.0], [28.4, 4003.0], [28.5, 4003.0], [28.6, 4003.0], [28.7, 4003.0], [28.8, 4003.0], [28.9, 4003.0], [29.0, 4003.0], [29.1, 4003.0], [29.2, 4003.0], [29.3, 4003.0], [29.4, 4003.0], [29.5, 4003.0], [29.6, 4003.0], [29.7, 4003.0], [29.8, 4003.0], [29.9, 4003.0], [30.0, 4003.0], [30.1, 4003.0], [30.2, 4003.0], [30.3, 4003.0], [30.4, 4003.0], [30.5, 4003.0], [30.6, 4003.0], [30.7, 4003.0], [30.8, 4003.0], [30.9, 4003.0], [31.0, 4003.0], [31.1, 4003.0], [31.2, 4003.0], [31.3, 4003.0], [31.4, 4003.0], [31.5, 4003.0], [31.6, 4003.0], [31.7, 4003.0], [31.8, 4003.0], [31.9, 4003.0], [32.0, 4003.0], [32.1, 4003.0], [32.2, 4003.0], [32.3, 4003.0], [32.4, 4003.0], [32.5, 4003.0], [32.6, 4003.0], [32.7, 4003.0], [32.8, 4003.0], [32.9, 4003.0], [33.0, 4003.0], [33.1, 4003.0], [33.2, 4003.0], [33.3, 4003.0], [33.4, 4003.0], [33.5, 4003.0], [33.6, 4003.0], [33.7, 4003.0], [33.8, 4003.0], [33.9, 4003.0], [34.0, 4003.0], [34.1, 4003.0], [34.2, 4003.0], [34.3, 4003.0], [34.4, 4003.0], [34.5, 4003.0], [34.6, 4003.0], [34.7, 4003.0], [34.8, 4003.0], [34.9, 4004.0], [35.0, 4004.0], [35.1, 4004.0], [35.2, 4004.0], [35.3, 4004.0], [35.4, 4004.0], [35.5, 4004.0], [35.6, 4004.0], [35.7, 4004.0], [35.8, 4004.0], [35.9, 4004.0], [36.0, 4004.0], [36.1, 4004.0], [36.2, 4004.0], [36.3, 4004.0], [36.4, 4004.0], [36.5, 4004.0], [36.6, 4004.0], [36.7, 4004.0], [36.8, 4004.0], [36.9, 4004.0], [37.0, 4004.0], [37.1, 4004.0], [37.2, 4004.0], [37.3, 4004.0], [37.4, 4004.0], [37.5, 4004.0], [37.6, 4004.0], [37.7, 4004.0], [37.8, 4004.0], [37.9, 4004.0], [38.0, 4004.0], [38.1, 4004.0], [38.2, 4004.0], [38.3, 4004.0], [38.4, 4004.0], [38.5, 4004.0], [38.6, 4004.0], [38.7, 4004.0], [38.8, 4004.0], [38.9, 4004.0], [39.0, 4004.0], [39.1, 4004.0], [39.2, 4004.0], [39.3, 4004.0], [39.4, 4004.0], [39.5, 4004.0], [39.6, 4004.0], [39.7, 4004.0], [39.8, 4004.0], [39.9, 4004.0], [40.0, 4004.0], [40.1, 4004.0], [40.2, 4004.0], [40.3, 4004.0], [40.4, 4004.0], [40.5, 4004.0], [40.6, 4004.0], [40.7, 4004.0], [40.8, 4004.0], [40.9, 4004.0], [41.0, 4004.0], [41.1, 4004.0], [41.2, 4004.0], [41.3, 4004.0], [41.4, 4004.0], [41.5, 4004.0], [41.6, 4004.0], [41.7, 4004.0], [41.8, 4004.0], [41.9, 4004.0], [42.0, 4004.0], [42.1, 4004.0], [42.2, 4004.0], [42.3, 4004.0], [42.4, 4004.0], [42.5, 4004.0], [42.6, 4004.0], [42.7, 4004.0], [42.8, 4004.0], [42.9, 4004.0], [43.0, 4004.0], [43.1, 4004.0], [43.2, 4004.0], [43.3, 4004.0], [43.4, 4004.0], [43.5, 4004.0], [43.6, 4004.0], [43.7, 4004.0], [43.8, 4004.0], [43.9, 4004.0], [44.0, 4004.0], [44.1, 4004.0], [44.2, 4004.0], [44.3, 4004.0], [44.4, 4004.0], [44.5, 4004.0], [44.6, 4004.0], [44.7, 4004.0], [44.8, 4004.0], [44.9, 4004.0], [45.0, 4004.0], [45.1, 4004.0], [45.2, 4004.0], [45.3, 4004.0], [45.4, 4004.0], [45.5, 4004.0], [45.6, 4004.0], [45.7, 4004.0], [45.8, 4004.0], [45.9, 4004.0], [46.0, 4004.0], [46.1, 4004.0], [46.2, 4004.0], [46.3, 4004.0], [46.4, 4004.0], [46.5, 4004.0], [46.6, 4004.0], [46.7, 4004.0], [46.8, 4004.0], [46.9, 4004.0], [47.0, 4004.0], [47.1, 4004.0], [47.2, 4004.0], [47.3, 4004.0], [47.4, 4004.0], [47.5, 4004.0], [47.6, 4004.0], [47.7, 4004.0], [47.8, 4004.0], [47.9, 4004.0], [48.0, 4004.0], [48.1, 4004.0], [48.2, 4005.0], [48.3, 4005.0], [48.4, 4005.0], [48.5, 4005.0], [48.6, 4005.0], [48.7, 4005.0], [48.8, 4005.0], [48.9, 4005.0], [49.0, 4005.0], [49.1, 4005.0], [49.2, 4005.0], [49.3, 4005.0], [49.4, 4005.0], [49.5, 4005.0], [49.6, 4005.0], [49.7, 4005.0], [49.8, 4005.0], [49.9, 4005.0], [50.0, 4005.0], [50.1, 4005.0], [50.2, 4005.0], [50.3, 4005.0], [50.4, 4005.0], [50.5, 4005.0], [50.6, 4005.0], [50.7, 4005.0], [50.8, 4005.0], [50.9, 4005.0], [51.0, 4005.0], [51.1, 4005.0], [51.2, 4005.0], [51.3, 4005.0], [51.4, 4005.0], [51.5, 4005.0], [51.6, 4005.0], [51.7, 4005.0], [51.8, 4005.0], [51.9, 4005.0], [52.0, 4005.0], [52.1, 4005.0], [52.2, 4005.0], [52.3, 4005.0], [52.4, 4005.0], [52.5, 4005.0], [52.6, 4005.0], [52.7, 4005.0], [52.8, 4005.0], [52.9, 4005.0], [53.0, 4005.0], [53.1, 4005.0], [53.2, 4005.0], [53.3, 4005.0], [53.4, 4005.0], [53.5, 4005.0], [53.6, 4005.0], [53.7, 4005.0], [53.8, 4005.0], [53.9, 4005.0], [54.0, 4005.0], [54.1, 4005.0], [54.2, 4005.0], [54.3, 4005.0], [54.4, 4005.0], [54.5, 4005.0], [54.6, 4005.0], [54.7, 4005.0], [54.8, 4005.0], [54.9, 4005.0], [55.0, 4005.0], [55.1, 4005.0], [55.2, 4005.0], [55.3, 4005.0], [55.4, 4005.0], [55.5, 4005.0], [55.6, 4005.0], [55.7, 4005.0], [55.8, 4005.0], [55.9, 4005.0], [56.0, 4006.0], [56.1, 4006.0], [56.2, 4006.0], [56.3, 4006.0], [56.4, 4006.0], [56.5, 4006.0], [56.6, 4006.0], [56.7, 4006.0], [56.8, 4006.0], [56.9, 4006.0], [57.0, 4006.0], [57.1, 4006.0], [57.2, 4006.0], [57.3, 4006.0], [57.4, 4006.0], [57.5, 4006.0], [57.6, 4006.0], [57.7, 4006.0], [57.8, 4006.0], [57.9, 4006.0], [58.0, 4006.0], [58.1, 4006.0], [58.2, 4006.0], [58.3, 4006.0], [58.4, 4006.0], [58.5, 4006.0], [58.6, 4006.0], [58.7, 4006.0], [58.8, 4006.0], [58.9, 4006.0], [59.0, 4006.0], [59.1, 4006.0], [59.2, 4006.0], [59.3, 4006.0], [59.4, 4006.0], [59.5, 4006.0], [59.6, 4006.0], [59.7, 4006.0], [59.8, 4006.0], [59.9, 4006.0], [60.0, 4006.0], [60.1, 4006.0], [60.2, 4006.0], [60.3, 4006.0], [60.4, 4006.0], [60.5, 4006.0], [60.6, 4006.0], [60.7, 4007.0], [60.8, 4007.0], [60.9, 4007.0], [61.0, 4007.0], [61.1, 4007.0], [61.2, 4007.0], [61.3, 4007.0], [61.4, 4007.0], [61.5, 4007.0], [61.6, 4007.0], [61.7, 4007.0], [61.8, 4007.0], [61.9, 4007.0], [62.0, 4007.0], [62.1, 4007.0], [62.2, 4007.0], [62.3, 4007.0], [62.4, 4007.0], [62.5, 4007.0], [62.6, 4007.0], [62.7, 4007.0], [62.8, 4007.0], [62.9, 4007.0], [63.0, 4007.0], [63.1, 4007.0], [63.2, 4007.0], [63.3, 4007.0], [63.4, 4007.0], [63.5, 4007.0], [63.6, 4007.0], [63.7, 4007.0], [63.8, 4007.0], [63.9, 4007.0], [64.0, 4007.0], [64.1, 4007.0], [64.2, 4008.0], [64.3, 4008.0], [64.4, 4008.0], [64.5, 4008.0], [64.6, 4008.0], [64.7, 4008.0], [64.8, 4008.0], [64.9, 4008.0], [65.0, 4008.0], [65.1, 4008.0], [65.2, 4008.0], [65.3, 4008.0], [65.4, 4008.0], [65.5, 4008.0], [65.6, 4008.0], [65.7, 4008.0], [65.8, 4008.0], [65.9, 4008.0], [66.0, 4008.0], [66.1, 4008.0], [66.2, 4008.0], [66.3, 4008.0], [66.4, 4008.0], [66.5, 4008.0], [66.6, 4008.0], [66.7, 4009.0], [66.8, 4009.0], [66.9, 4009.0], [67.0, 4009.0], [67.1, 4009.0], [67.2, 4009.0], [67.3, 4009.0], [67.4, 4009.0], [67.5, 4009.0], [67.6, 4009.0], [67.7, 4009.0], [67.8, 4009.0], [67.9, 4009.0], [68.0, 4009.0], [68.1, 4009.0], [68.2, 4009.0], [68.3, 4009.0], [68.4, 4009.0], [68.5, 4009.0], [68.6, 4009.0], [68.7, 4009.0], [68.8, 4009.0], [68.9, 4009.0], [69.0, 4009.0], [69.1, 4009.0], [69.2, 4009.0], [69.3, 4009.0], [69.4, 4009.0], [69.5, 4009.0], [69.6, 4009.0], [69.7, 4009.0], [69.8, 4009.0], [69.9, 4009.0], [70.0, 4009.0], [70.1, 4009.0], [70.2, 4010.0], [70.3, 4010.0], [70.4, 4010.0], [70.5, 4010.0], [70.6, 4010.0], [70.7, 4010.0], [70.8, 4010.0], [70.9, 4010.0], [71.0, 4010.0], [71.1, 4010.0], [71.2, 4010.0], [71.3, 4010.0], [71.4, 4010.0], [71.5, 4010.0], [71.6, 4010.0], [71.7, 4011.0], [71.8, 4011.0], [71.9, 4011.0], [72.0, 4011.0], [72.1, 4011.0], [72.2, 4011.0], [72.3, 4011.0], [72.4, 4011.0], [72.5, 4011.0], [72.6, 4011.0], [72.7, 4011.0], [72.8, 4011.0], [72.9, 4011.0], [73.0, 4011.0], [73.1, 4011.0], [73.2, 4011.0], [73.3, 4011.0], [73.4, 4011.0], [73.5, 4012.0], [73.6, 4012.0], [73.7, 4012.0], [73.8, 4012.0], [73.9, 4012.0], [74.0, 4012.0], [74.1, 4012.0], [74.2, 4012.0], [74.3, 4012.0], [74.4, 4012.0], [74.5, 4012.0], [74.6, 4012.0], [74.7, 4012.0], [74.8, 4012.0], [74.9, 4012.0], [75.0, 4013.0], [75.1, 4013.0], [75.2, 4013.0], [75.3, 4013.0], [75.4, 4013.0], [75.5, 4013.0], [75.6, 4013.0], [75.7, 4013.0], [75.8, 4013.0], [75.9, 4013.0], [76.0, 4013.0], [76.1, 4013.0], [76.2, 4013.0], [76.3, 4013.0], [76.4, 4014.0], [76.5, 4014.0], [76.6, 4014.0], [76.7, 4014.0], [76.8, 4014.0], [76.9, 4014.0], [77.0, 4014.0], [77.1, 4014.0], [77.2, 4014.0], [77.3, 4014.0], [77.4, 4014.0], [77.5, 4014.0], [77.6, 4014.0], [77.7, 4014.0], [77.8, 4014.0], [77.9, 4015.0], [78.0, 4015.0], [78.1, 4015.0], [78.2, 4015.0], [78.3, 4015.0], [78.4, 4016.0], [78.5, 4016.0], [78.6, 4016.0], [78.7, 4016.0], [78.8, 4016.0], [78.9, 4016.0], [79.0, 4016.0], [79.1, 4016.0], [79.2, 4017.0], [79.3, 4017.0], [79.4, 4017.0], [79.5, 4017.0], [79.6, 4017.0], [79.7, 4017.0], [79.8, 4017.0], [79.9, 4018.0], [80.0, 4018.0], [80.1, 4018.0], [80.2, 4018.0], [80.3, 4018.0], [80.4, 4018.0], [80.5, 4018.0], [80.6, 4018.0], [80.7, 4019.0], [80.8, 4019.0], [80.9, 4019.0], [81.0, 4019.0], [81.1, 4019.0], [81.2, 4019.0], [81.3, 4019.0], [81.4, 4020.0], [81.5, 4020.0], [81.6, 4020.0], [81.7, 4020.0], [81.8, 4020.0], [81.9, 4020.0], [82.0, 4021.0], [82.1, 4021.0], [82.2, 4021.0], [82.3, 4021.0], [82.4, 4021.0], [82.5, 4022.0], [82.6, 4022.0], [82.7, 4022.0], [82.8, 4022.0], [82.9, 4022.0], [83.0, 4023.0], [83.1, 4023.0], [83.2, 4023.0], [83.3, 4023.0], [83.4, 4023.0], [83.5, 4024.0], [83.6, 4024.0], [83.7, 4024.0], [83.8, 4024.0], [83.9, 4025.0], [84.0, 4025.0], [84.1, 4025.0], [84.2, 4025.0], [84.3, 4025.0], [84.4, 4025.0], [84.5, 4025.0], [84.6, 4025.0], [84.7, 4026.0], [84.8, 4027.0], [84.9, 4027.0], [85.0, 4027.0], [85.1, 4027.0], [85.2, 4028.0], [85.3, 4028.0], [85.4, 4028.0], [85.5, 4028.0], [85.6, 4028.0], [85.7, 4028.0], [85.8, 4028.0], [85.9, 4029.0], [86.0, 4029.0], [86.1, 4029.0], [86.2, 4032.0], [86.3, 4032.0], [86.4, 4032.0], [86.5, 4032.0], [86.6, 4032.0], [86.7, 4033.0], [86.8, 4034.0], [86.9, 4034.0], [87.0, 4034.0], [87.1, 4035.0], [87.2, 4035.0], [87.3, 4036.0], [87.4, 4036.0], [87.5, 4036.0], [87.6, 4036.0], [87.7, 4036.0], [87.8, 4036.0], [87.9, 4037.0], [88.0, 4037.0], [88.1, 4037.0], [88.2, 4038.0], [88.3, 4039.0], [88.4, 4039.0], [88.5, 4040.0], [88.6, 4041.0], [88.7, 4041.0], [88.8, 4042.0], [88.9, 4042.0], [89.0, 4042.0], [89.1, 4043.0], [89.2, 4043.0], [89.3, 4043.0], [89.4, 4043.0], [89.5, 4044.0], [89.6, 4045.0], [89.7, 4045.0], [89.8, 4045.0], [89.9, 4046.0], [90.0, 4046.0], [90.1, 4046.0], [90.2, 4046.0], [90.3, 4046.0], [90.4, 4047.0], [90.5, 4047.0], [90.6, 4047.0], [90.7, 4047.0], [90.8, 4048.0], [90.9, 4048.0], [91.0, 4048.0], [91.1, 4049.0], [91.2, 4049.0], [91.3, 4049.0], [91.4, 4049.0], [91.5, 4049.0], [91.6, 4050.0], [91.7, 4051.0], [91.8, 4051.0], [91.9, 4052.0], [92.0, 4052.0], [92.1, 4052.0], [92.2, 4052.0], [92.3, 4052.0], [92.4, 4053.0], [92.5, 4053.0], [92.6, 4053.0], [92.7, 4053.0], [92.8, 4054.0], [92.9, 4054.0], [93.0, 4054.0], [93.1, 4054.0], [93.2, 4055.0], [93.3, 4055.0], [93.4, 4055.0], [93.5, 4056.0], [93.6, 4056.0], [93.7, 4056.0], [93.8, 4056.0], [93.9, 4057.0], [94.0, 4057.0], [94.1, 4058.0], [94.2, 4058.0], [94.3, 4058.0], [94.4, 4059.0], [94.5, 4060.0], [94.6, 4060.0], [94.7, 4060.0], [94.8, 4062.0], [94.9, 4062.0], [95.0, 4063.0], [95.1, 4063.0], [95.2, 4063.0], [95.3, 4063.0], [95.4, 4064.0], [95.5, 4064.0], [95.6, 4064.0], [95.7, 4064.0], [95.8, 4065.0], [95.9, 4065.0], [96.0, 4066.0], [96.1, 4066.0], [96.2, 4066.0], [96.3, 4066.0], [96.4, 4067.0], [96.5, 4067.0], [96.6, 4067.0], [96.7, 4068.0], [96.8, 4068.0], [96.9, 4069.0], [97.0, 4069.0], [97.1, 4069.0], [97.2, 4072.0], [97.3, 4072.0], [97.4, 4073.0], [97.5, 4073.0], [97.6, 4073.0], [97.7, 4075.0], [97.8, 4075.0], [97.9, 4077.0], [98.0, 4089.0], [98.1, 4095.0], [98.2, 4095.0], [98.3, 4096.0], [98.4, 4101.0], [98.5, 4103.0], [98.6, 4105.0], [98.7, 4108.0], [98.8, 4109.0], [98.9, 4113.0], [99.0, 4121.0], [99.1, 4126.0], [99.2, 4135.0], [99.3, 4141.0], [99.4, 4143.0], [99.5, 4148.0], [99.6, 4162.0], [99.7, 4214.0], [99.8, 4215.0], [99.9, 4225.0]], "isOverall": false, "label": "All_users", "isController": false}, {"data": [[0.0, 4000.0], [0.1, 4001.0], [0.2, 4001.0], [0.3, 4001.0], [0.4, 4001.0], [0.5, 4001.0], [0.6, 4001.0], [0.7, 4001.0], [0.8, 4001.0], [0.9, 4001.0], [1.0, 4001.0], [1.1, 4001.0], [1.2, 4001.0], [1.3, 4001.0], [1.4, 4001.0], [1.5, 4001.0], [1.6, 4001.0], [1.7, 4001.0], [1.8, 4001.0], [1.9, 4001.0], [2.0, 4001.0], [2.1, 4001.0], [2.2, 4002.0], [2.3, 4002.0], [2.4, 4002.0], [2.5, 4002.0], [2.6, 4002.0], [2.7, 4002.0], [2.8, 4002.0], [2.9, 4002.0], [3.0, 4002.0], [3.1, 4002.0], [3.2, 4002.0], [3.3, 4002.0], [3.4, 4002.0], [3.5, 4002.0], [3.6, 4002.0], [3.7, 4002.0], [3.8, 4002.0], [3.9, 4002.0], [4.0, 4002.0], [4.1, 4002.0], [4.2, 4002.0], [4.3, 4002.0], [4.4, 4002.0], [4.5, 4002.0], [4.6, 4002.0], [4.7, 4002.0], [4.8, 4002.0], [4.9, 4002.0], [5.0, 4002.0], [5.1, 4002.0], [5.2, 4002.0], [5.3, 4002.0], [5.4, 4002.0], [5.5, 4002.0], [5.6, 4002.0], [5.7, 4002.0], [5.8, 4002.0], [5.9, 4002.0], [6.0, 4002.0], [6.1, 4002.0], [6.2, 4002.0], [6.3, 4002.0], [6.4, 4002.0], [6.5, 4002.0], [6.6, 4002.0], [6.7, 4002.0], [6.8, 4002.0], [6.9, 4002.0], [7.0, 4002.0], [7.1, 4002.0], [7.2, 4002.0], [7.3, 4002.0], [7.4, 4002.0], [7.5, 4002.0], [7.6, 4002.0], [7.7, 4002.0], [7.8, 4002.0], [7.9, 4002.0], [8.0, 4002.0], [8.1, 4002.0], [8.2, 4002.0], [8.3, 4002.0], [8.4, 4002.0], [8.5, 4002.0], [8.6, 4002.0], [8.7, 4002.0], [8.8, 4002.0], [8.9, 4002.0], [9.0, 4002.0], [9.1, 4002.0], [9.2, 4002.0], [9.3, 4002.0], [9.4, 4002.0], [9.5, 4002.0], [9.6, 4002.0], [9.7, 4002.0], [9.8, 4002.0], [9.9, 4002.0], [10.0, 4002.0], [10.1, 4002.0], [10.2, 4002.0], [10.3, 4002.0], [10.4, 4002.0], [10.5, 4002.0], [10.6, 4002.0], [10.7, 4002.0], [10.8, 4002.0], [10.9, 4002.0], [11.0, 4002.0], [11.1, 4002.0], [11.2, 4002.0], [11.3, 4002.0], [11.4, 4002.0], [11.5, 4002.0], [11.6, 4002.0], [11.7, 4002.0], [11.8, 4002.0], [11.9, 4002.0], [12.0, 4003.0], [12.1, 4003.0], [12.2, 4003.0], [12.3, 4003.0], [12.4, 4003.0], [12.5, 4003.0], [12.6, 4003.0], [12.7, 4003.0], [12.8, 4003.0], [12.9, 4003.0], [13.0, 4003.0], [13.1, 4003.0], [13.2, 4003.0], [13.3, 4003.0], [13.4, 4003.0], [13.5, 4003.0], [13.6, 4003.0], [13.7, 4003.0], [13.8, 4003.0], [13.9, 4003.0], [14.0, 4003.0], [14.1, 4003.0], [14.2, 4003.0], [14.3, 4003.0], [14.4, 4003.0], [14.5, 4003.0], [14.6, 4003.0], [14.7, 4003.0], [14.8, 4003.0], [14.9, 4003.0], [15.0, 4003.0], [15.1, 4003.0], [15.2, 4003.0], [15.3, 4003.0], [15.4, 4003.0], [15.5, 4003.0], [15.6, 4003.0], [15.7, 4003.0], [15.8, 4003.0], [15.9, 4003.0], [16.0, 4003.0], [16.1, 4003.0], [16.2, 4003.0], [16.3, 4003.0], [16.4, 4003.0], [16.5, 4003.0], [16.6, 4003.0], [16.7, 4003.0], [16.8, 4003.0], [16.9, 4003.0], [17.0, 4003.0], [17.1, 4003.0], [17.2, 4003.0], [17.3, 4003.0], [17.4, 4003.0], [17.5, 4003.0], [17.6, 4003.0], [17.7, 4003.0], [17.8, 4003.0], [17.9, 4003.0], [18.0, 4003.0], [18.1, 4003.0], [18.2, 4003.0], [18.3, 4003.0], [18.4, 4003.0], [18.5, 4003.0], [18.6, 4003.0], [18.7, 4003.0], [18.8, 4003.0], [18.9, 4003.0], [19.0, 4003.0], [19.1, 4003.0], [19.2, 4003.0], [19.3, 4003.0], [19.4, 4003.0], [19.5, 4003.0], [19.6, 4003.0], [19.7, 4003.0], [19.8, 4003.0], [19.9, 4003.0], [20.0, 4003.0], [20.1, 4003.0], [20.2, 4003.0], [20.3, 4003.0], [20.4, 4003.0], [20.5, 4003.0], [20.6, 4003.0], [20.7, 4003.0], [20.8, 4003.0], [20.9, 4003.0], [21.0, 4003.0], [21.1, 4003.0], [21.2, 4003.0], [21.3, 4004.0], [21.4, 4004.0], [21.5, 4004.0], [21.6, 4004.0], [21.7, 4004.0], [21.8, 4004.0], [21.9, 4004.0], [22.0, 4004.0], [22.1, 4004.0], [22.2, 4004.0], [22.3, 4004.0], [22.4, 4004.0], [22.5, 4004.0], [22.6, 4004.0], [22.7, 4004.0], [22.8, 4004.0], [22.9, 4004.0], [23.0, 4004.0], [23.1, 4004.0], [23.2, 4004.0], [23.3, 4004.0], [23.4, 4004.0], [23.5, 4004.0], [23.6, 4004.0], [23.7, 4004.0], [23.8, 4004.0], [23.9, 4004.0], [24.0, 4004.0], [24.1, 4004.0], [24.2, 4004.0], [24.3, 4004.0], [24.4, 4004.0], [24.5, 4004.0], [24.6, 4004.0], [24.7, 4004.0], [24.8, 4004.0], [24.9, 4004.0], [25.0, 4004.0], [25.1, 4004.0], [25.2, 4004.0], [25.3, 4004.0], [25.4, 4004.0], [25.5, 4004.0], [25.6, 4004.0], [25.7, 4004.0], [25.8, 4004.0], [25.9, 4004.0], [26.0, 4004.0], [26.1, 4004.0], [26.2, 4004.0], [26.3, 4004.0], [26.4, 4004.0], [26.5, 4004.0], [26.6, 4004.0], [26.7, 4004.0], [26.8, 4004.0], [26.9, 4004.0], [27.0, 4004.0], [27.1, 4004.0], [27.2, 4004.0], [27.3, 4004.0], [27.4, 4004.0], [27.5, 4004.0], [27.6, 4004.0], [27.7, 4004.0], [27.8, 4004.0], [27.9, 4005.0], [28.0, 4005.0], [28.1, 4005.0], [28.2, 4005.0], [28.3, 4005.0], [28.4, 4005.0], [28.5, 4005.0], [28.6, 4005.0], [28.7, 4005.0], [28.8, 4005.0], [28.9, 4005.0], [29.0, 4005.0], [29.1, 4005.0], [29.2, 4005.0], [29.3, 4005.0], [29.4, 4005.0], [29.5, 4005.0], [29.6, 4005.0], [29.7, 4005.0], [29.8, 4005.0], [29.9, 4005.0], [30.0, 4005.0], [30.1, 4005.0], [30.2, 4005.0], [30.3, 4005.0], [30.4, 4005.0], [30.5, 4005.0], [30.6, 4005.0], [30.7, 4005.0], [30.8, 4005.0], [30.9, 4005.0], [31.0, 4005.0], [31.1, 4005.0], [31.2, 4005.0], [31.3, 4005.0], [31.4, 4005.0], [31.5, 4005.0], [31.6, 4005.0], [31.7, 4005.0], [31.8, 4005.0], [31.9, 4005.0], [32.0, 4005.0], [32.1, 4005.0], [32.2, 4005.0], [32.3, 4005.0], [32.4, 4005.0], [32.5, 4005.0], [32.6, 4005.0], [32.7, 4005.0], [32.8, 4005.0], [32.9, 4005.0], [33.0, 4005.0], [33.1, 4005.0], [33.2, 4005.0], [33.3, 4005.0], [33.4, 4005.0], [33.5, 4005.0], [33.6, 4005.0], [33.7, 4006.0], [33.8, 4006.0], [33.9, 4006.0], [34.0, 4006.0], [34.1, 4006.0], [34.2, 4006.0], [34.3, 4006.0], [34.4, 4006.0], [34.5, 4006.0], [34.6, 4006.0], [34.7, 4006.0], [34.8, 4006.0], [34.9, 4006.0], [35.0, 4006.0], [35.1, 4006.0], [35.2, 4006.0], [35.3, 4006.0], [35.4, 4006.0], [35.5, 4006.0], [35.6, 4006.0], [35.7, 4006.0], [35.8, 4006.0], [35.9, 4006.0], [36.0, 4006.0], [36.1, 4006.0], [36.2, 4006.0], [36.3, 4006.0], [36.4, 4006.0], [36.5, 4006.0], [36.6, 4006.0], [36.7, 4006.0], [36.8, 4006.0], [36.9, 4006.0], [37.0, 4006.0], [37.1, 4006.0], [37.2, 4006.0], [37.3, 4007.0], [37.4, 4007.0], [37.5, 4007.0], [37.6, 4007.0], [37.7, 4007.0], [37.8, 4007.0], [37.9, 4007.0], [38.0, 4007.0], [38.1, 4007.0], [38.2, 4007.0], [38.3, 4007.0], [38.4, 4007.0], [38.5, 4007.0], [38.6, 4007.0], [38.7, 4007.0], [38.8, 4007.0], [38.9, 4007.0], [39.0, 4007.0], [39.1, 4007.0], [39.2, 4007.0], [39.3, 4007.0], [39.4, 4007.0], [39.5, 4008.0], [39.6, 4008.0], [39.7, 4008.0], [39.8, 4008.0], [39.9, 4008.0], [40.0, 4008.0], [40.1, 4008.0], [40.2, 4008.0], [40.3, 4008.0], [40.4, 4008.0], [40.5, 4008.0], [40.6, 4008.0], [40.7, 4008.0], [40.8, 4008.0], [40.9, 4008.0], [41.0, 4008.0], [41.1, 4008.0], [41.2, 4008.0], [41.3, 4008.0], [41.4, 4008.0], [41.5, 4008.0], [41.6, 4008.0], [41.7, 4009.0], [41.8, 4009.0], [41.9, 4009.0], [42.0, 4009.0], [42.1, 4009.0], [42.2, 4009.0], [42.3, 4009.0], [42.4, 4009.0], [42.5, 4009.0], [42.6, 4009.0], [42.7, 4009.0], [42.8, 4009.0], [42.9, 4010.0], [43.0, 4010.0], [43.1, 4010.0], [43.2, 4010.0], [43.3, 4010.0], [43.4, 4010.0], [43.5, 4010.0], [43.6, 4010.0], [43.7, 4010.0], [43.8, 4010.0], [43.9, 4010.0], [44.0, 4010.0], [44.1, 4010.0], [44.2, 4010.0], [44.3, 4010.0], [44.4, 4010.0], [44.5, 4010.0], [44.6, 4010.0], [44.7, 4011.0], [44.8, 4011.0], [44.9, 4011.0], [45.0, 4011.0], [45.1, 4011.0], [45.2, 4011.0], [45.3, 4011.0], [45.4, 4011.0], [45.5, 4011.0], [45.6, 4011.0], [45.7, 4011.0], [45.8, 4011.0], [45.9, 4012.0], [46.0, 4012.0], [46.1, 4012.0], [46.2, 4012.0], [46.3, 4012.0], [46.4, 4012.0], [46.5, 4012.0], [46.6, 4012.0], [46.7, 4012.0], [46.8, 4012.0], [46.9, 4012.0], [47.0, 4012.0], [47.1, 4013.0], [47.2, 4013.0], [47.3, 4013.0], [47.4, 4013.0], [47.5, 4013.0], [47.6, 4013.0], [47.7, 4013.0], [47.8, 4013.0], [47.9, 4013.0], [48.0, 4014.0], [48.1, 4014.0], [48.2, 4014.0], [48.3, 4014.0], [48.4, 4014.0], [48.5, 4014.0], [48.6, 4014.0], [48.7, 4015.0], [48.8, 4015.0], [48.9, 4015.0], [49.0, 4015.0], [49.1, 4015.0], [49.2, 4015.0], [49.3, 4015.0], [49.4, 4015.0], [49.5, 4016.0], [49.6, 4016.0], [49.7, 4016.0], [49.8, 4016.0], [49.9, 4016.0], [50.0, 4016.0], [50.1, 4016.0], [50.2, 4016.0], [50.3, 4016.0], [50.4, 4016.0], [50.5, 4016.0], [50.6, 4016.0], [50.7, 4017.0], [50.8, 4017.0], [50.9, 4017.0], [51.0, 4017.0], [51.1, 4017.0], [51.2, 4018.0], [51.3, 4018.0], [51.4, 4018.0], [51.5, 4018.0], [51.6, 4018.0], [51.7, 4019.0], [51.8, 4019.0], [51.9, 4020.0], [52.0, 4020.0], [52.1, 4020.0], [52.2, 4020.0], [52.3, 4020.0], [52.4, 4020.0], [52.5, 4020.0], [52.6, 4020.0], [52.7, 4020.0], [52.8, 4020.0], [52.9, 4021.0], [53.0, 4021.0], [53.1, 4021.0], [53.2, 4021.0], [53.3, 4021.0], [53.4, 4021.0], [53.5, 4021.0], [53.6, 4022.0], [53.7, 4022.0], [53.8, 4022.0], [53.9, 4022.0], [54.0, 4022.0], [54.1, 4022.0], [54.2, 4023.0], [54.3, 4023.0], [54.4, 4023.0], [54.5, 4024.0], [54.6, 4024.0], [54.7, 4024.0], [54.8, 4024.0], [54.9, 4024.0], [55.0, 4024.0], [55.1, 4025.0], [55.2, 4025.0], [55.3, 4025.0], [55.4, 4025.0], [55.5, 4025.0], [55.6, 4025.0], [55.7, 4025.0], [55.8, 4026.0], [55.9, 4026.0], [56.0, 4026.0], [56.1, 4026.0], [56.2, 4027.0], [56.3, 4027.0], [56.4, 4027.0], [56.5, 4027.0], [56.6, 4027.0], [56.7, 4027.0], [56.8, 4028.0], [56.9, 4028.0], [57.0, 4028.0], [57.1, 4029.0], [57.2, 4029.0], [57.3, 4029.0], [57.4, 4029.0], [57.5, 4029.0], [57.6, 4030.0], [57.7, 4030.0], [57.8, 4030.0], [57.9, 4030.0], [58.0, 4030.0], [58.1, 4031.0], [58.2, 4031.0], [58.3, 4031.0], [58.4, 4031.0], [58.5, 4032.0], [58.6, 4032.0], [58.7, 4032.0], [58.8, 4033.0], [58.9, 4033.0], [59.0, 4033.0], [59.1, 4033.0], [59.2, 4033.0], [59.3, 4033.0], [59.4, 4034.0], [59.5, 4034.0], [59.6, 4034.0], [59.7, 4034.0], [59.8, 4034.0], [59.9, 4035.0], [60.0, 4036.0], [60.1, 4036.0], [60.2, 4037.0], [60.3, 4037.0], [60.4, 4037.0], [60.5, 4038.0], [60.6, 4039.0], [60.7, 4039.0], [60.8, 4039.0], [60.9, 4039.0], [61.0, 4040.0], [61.1, 4040.0], [61.2, 4042.0], [61.3, 4043.0], [61.4, 4043.0], [61.5, 4043.0], [61.6, 4043.0], [61.7, 4043.0], [61.8, 4043.0], [61.9, 4044.0], [62.0, 4044.0], [62.1, 4044.0], [62.2, 4044.0], [62.3, 4045.0], [62.4, 4045.0], [62.5, 4045.0], [62.6, 4045.0], [62.7, 4045.0], [62.8, 4046.0], [62.9, 4046.0], [63.0, 4046.0], [63.1, 4047.0], [63.2, 4047.0], [63.3, 4047.0], [63.4, 4047.0], [63.5, 4048.0], [63.6, 4048.0], [63.7, 4048.0], [63.8, 4048.0], [63.9, 4049.0], [64.0, 4049.0], [64.1, 4050.0], [64.2, 4050.0], [64.3, 4050.0], [64.4, 4050.0], [64.5, 4050.0], [64.6, 4051.0], [64.7, 4051.0], [64.8, 4052.0], [64.9, 4052.0], [65.0, 4052.0], [65.1, 4052.0], [65.2, 4052.0], [65.3, 4054.0], [65.4, 4054.0], [65.5, 4054.0], [65.6, 4054.0], [65.7, 4055.0], [65.8, 4055.0], [65.9, 4055.0], [66.0, 4055.0], [66.1, 4056.0], [66.2, 4056.0], [66.3, 4059.0], [66.4, 4060.0], [66.5, 4060.0], [66.6, 4061.0], [66.7, 4061.0], [66.8, 4061.0], [66.9, 4061.0], [67.0, 4062.0], [67.1, 4062.0], [67.2, 4062.0], [67.3, 4063.0], [67.4, 4063.0], [67.5, 4063.0], [67.6, 4063.0], [67.7, 4063.0], [67.8, 4063.0], [67.9, 4063.0], [68.0, 4063.0], [68.1, 4064.0], [68.2, 4064.0], [68.3, 4065.0], [68.4, 4065.0], [68.5, 4066.0], [68.6, 4066.0], [68.7, 4067.0], [68.8, 4067.0], [68.9, 4067.0], [69.0, 4069.0], [69.1, 4069.0], [69.2, 4069.0], [69.3, 4070.0], [69.4, 4072.0], [69.5, 4072.0], [69.6, 4073.0], [69.7, 4073.0], [69.8, 4074.0], [69.9, 4074.0], [70.0, 4075.0], [70.1, 4076.0], [70.2, 4076.0], [70.3, 4076.0], [70.4, 4077.0], [70.5, 4077.0], [70.6, 4077.0], [70.7, 4077.0], [70.8, 4078.0], [70.9, 4079.0], [71.0, 4079.0], [71.1, 4080.0], [71.2, 4080.0], [71.3, 4080.0], [71.4, 4081.0], [71.5, 4081.0], [71.6, 4082.0], [71.7, 4083.0], [71.8, 4083.0], [71.9, 4083.0], [72.0, 4084.0], [72.1, 4086.0], [72.2, 4086.0], [72.3, 4087.0], [72.4, 4092.0], [72.5, 4092.0], [72.6, 4092.0], [72.7, 4094.0], [72.8, 4094.0], [72.9, 4094.0], [73.0, 4099.0], [73.1, 4101.0], [73.2, 4108.0], [73.3, 4109.0], [73.4, 4109.0], [73.5, 4111.0], [73.6, 4112.0], [73.7, 4113.0], [73.8, 4115.0], [73.9, 4117.0], [74.0, 4118.0], [74.1, 4118.0], [74.2, 4120.0], [74.3, 4123.0], [74.4, 4124.0], [74.5, 4125.0], [74.6, 4126.0], [74.7, 4127.0], [74.8, 4129.0], [74.9, 4134.0], [75.0, 4137.0], [75.1, 4138.0], [75.2, 4140.0], [75.3, 4141.0], [75.4, 4141.0], [75.5, 4141.0], [75.6, 4143.0], [75.7, 4143.0], [75.8, 4144.0], [75.9, 4147.0], [76.0, 4147.0], [76.1, 4148.0], [76.2, 4149.0], [76.3, 4149.0], [76.4, 4150.0], [76.5, 4150.0], [76.6, 4150.0], [76.7, 4151.0], [76.8, 4152.0], [76.9, 4153.0], [77.0, 4153.0], [77.1, 4154.0], [77.2, 4156.0], [77.3, 4157.0], [77.4, 4159.0], [77.5, 4159.0], [77.6, 4160.0], [77.7, 4162.0], [77.8, 4163.0], [77.9, 4164.0], [78.0, 4165.0], [78.1, 4166.0], [78.2, 4166.0], [78.3, 4167.0], [78.4, 4168.0], [78.5, 4170.0], [78.6, 4171.0], [78.7, 4171.0], [78.8, 4173.0], [78.9, 4174.0], [79.0, 4174.0], [79.1, 4176.0], [79.2, 4177.0], [79.3, 4177.0], [79.4, 4178.0], [79.5, 4179.0], [79.6, 4180.0], [79.7, 4181.0], [79.8, 4182.0], [79.9, 4182.0], [80.0, 4183.0], [80.1, 4183.0], [80.2, 4183.0], [80.3, 4183.0], [80.4, 4187.0], [80.5, 4187.0], [80.6, 4188.0], [80.7, 4189.0], [80.8, 4189.0], [80.9, 4191.0], [81.0, 4193.0], [81.1, 4193.0], [81.2, 4194.0], [81.3, 4196.0], [81.4, 4197.0], [81.5, 4197.0], [81.6, 4200.0], [81.7, 4201.0], [81.8, 4203.0], [81.9, 4204.0], [82.0, 4206.0], [82.1, 4207.0], [82.2, 4210.0], [82.3, 4210.0], [82.4, 4222.0], [82.5, 4224.0], [82.6, 4225.0], [82.7, 4225.0], [82.8, 4226.0], [82.9, 4227.0], [83.0, 4227.0], [83.1, 4227.0], [83.2, 4227.0], [83.3, 4227.0], [83.4, 4227.0], [83.5, 4227.0], [83.6, 4228.0], [83.7, 4228.0], [83.8, 4228.0], [83.9, 4228.0], [84.0, 4229.0], [84.1, 4232.0], [84.2, 4234.0], [84.3, 4242.0], [84.4, 4243.0], [84.5, 4243.0], [84.6, 4244.0], [84.7, 4245.0], [84.8, 4247.0], [84.9, 4247.0], [85.0, 4248.0], [85.1, 4248.0], [85.2, 4249.0], [85.3, 4250.0], [85.4, 4251.0], [85.5, 4252.0], [85.6, 4252.0], [85.7, 4256.0], [85.8, 4266.0], [85.9, 4291.0], [86.0, 4294.0], [86.1, 4294.0], [86.2, 4295.0], [86.3, 4295.0], [86.4, 4296.0], [86.5, 4296.0], [86.6, 4297.0], [86.7, 4298.0], [86.8, 4315.0], [86.9, 4318.0], [87.0, 4319.0], [87.1, 4330.0], [87.2, 4332.0], [87.3, 4333.0], [87.4, 4333.0], [87.5, 4333.0], [87.6, 4333.0], [87.7, 4334.0], [87.8, 4334.0], [87.9, 4337.0], [88.0, 4338.0], [88.1, 4338.0], [88.2, 4340.0], [88.3, 4340.0], [88.4, 4340.0], [88.5, 4340.0], [88.6, 4348.0], [88.7, 4350.0], [88.8, 4352.0], [88.9, 4352.0], [89.0, 4352.0], [89.1, 4353.0], [89.2, 4367.0], [89.3, 4368.0], [89.4, 4390.0], [89.5, 4401.0], [89.6, 4406.0], [89.7, 4407.0], [89.8, 4407.0], [89.9, 4408.0], [90.0, 4408.0], [90.1, 4410.0], [90.2, 4411.0], [90.3, 4412.0], [90.4, 4413.0], [90.5, 4416.0], [90.6, 4416.0], [90.7, 4435.0], [90.8, 4436.0], [90.9, 4437.0], [91.0, 4438.0], [91.1, 4438.0], [91.2, 4441.0], [91.3, 4442.0], [91.4, 4444.0], [91.5, 4445.0], [91.6, 4445.0], [91.7, 4447.0], [91.8, 4450.0], [91.9, 4450.0], [92.0, 4452.0], [92.1, 4454.0], [92.2, 4456.0], [92.3, 4456.0], [92.4, 4457.0], [92.5, 4461.0], [92.6, 4462.0], [92.7, 4462.0], [92.8, 4463.0], [92.9, 4463.0], [93.0, 4463.0], [93.1, 4465.0], [93.2, 4466.0], [93.3, 4466.0], [93.4, 4466.0], [93.5, 4467.0], [93.6, 4468.0], [93.7, 4468.0], [93.8, 4468.0], [93.9, 4469.0], [94.0, 4470.0], [94.1, 4471.0], [94.2, 4471.0], [94.3, 4471.0], [94.4, 4471.0], [94.5, 4472.0], [94.6, 4473.0], [94.7, 4473.0], [94.8, 4473.0], [94.9, 4475.0], [95.0, 4475.0], [95.1, 4475.0], [95.2, 4476.0], [95.3, 4476.0], [95.4, 4476.0], [95.5, 4476.0], [95.6, 4477.0], [95.7, 4477.0], [95.8, 4477.0], [95.9, 4478.0], [96.0, 4479.0], [96.1, 4479.0], [96.2, 4480.0], [96.3, 4480.0], [96.4, 4480.0], [96.5, 4480.0], [96.6, 4481.0], [96.7, 4481.0], [96.8, 4481.0], [96.9, 4481.0], [97.0, 4481.0], [97.1, 4481.0], [97.2, 4481.0], [97.3, 4482.0], [97.4, 4483.0], [97.5, 4503.0], [97.6, 4505.0], [97.7, 4512.0], [97.8, 4512.0], [97.9, 4513.0], [98.0, 4515.0], [98.1, 4516.0], [98.2, 4517.0], [98.3, 4518.0], [98.4, 4520.0], [98.5, 4520.0], [98.6, 4520.0], [98.7, 4522.0], [98.8, 4522.0], [98.9, 4523.0], [99.0, 4525.0], [99.1, 4526.0], [99.2, 4529.0], [99.3, 4532.0], [99.4, 4905.0], [99.5, 4910.0], [99.6, 4914.0], [99.7, 4914.0], [99.8, 4915.0], [99.9, 4915.0]], "isOverall": false, "label": "All_Tasks", "isController": false}, {"data": [[0.0, 4001.0], [0.1, 4001.0], [0.2, 4001.0], [0.3, 4001.0], [0.4, 4001.0], [0.5, 4001.0], [0.6, 4001.0], [0.7, 4001.0], [0.8, 4001.0], [0.9, 4001.0], [1.0, 4001.0], [1.1, 4001.0], [1.2, 4001.0], [1.3, 4001.0], [1.4, 4001.0], [1.5, 4001.0], [1.6, 4001.0], [1.7, 4001.0], [1.8, 4001.0], [1.9, 4001.0], [2.0, 4002.0], [2.1, 4002.0], [2.2, 4002.0], [2.3, 4002.0], [2.4, 4002.0], [2.5, 4002.0], [2.6, 4002.0], [2.7, 4002.0], [2.8, 4002.0], [2.9, 4002.0], [3.0, 4002.0], [3.1, 4002.0], [3.2, 4002.0], [3.3, 4002.0], [3.4, 4002.0], [3.5, 4002.0], [3.6, 4002.0], [3.7, 4002.0], [3.8, 4002.0], [3.9, 4002.0], [4.0, 4002.0], [4.1, 4002.0], [4.2, 4002.0], [4.3, 4002.0], [4.4, 4002.0], [4.5, 4002.0], [4.6, 4002.0], [4.7, 4002.0], [4.8, 4002.0], [4.9, 4002.0], [5.0, 4002.0], [5.1, 4002.0], [5.2, 4002.0], [5.3, 4002.0], [5.4, 4002.0], [5.5, 4002.0], [5.6, 4002.0], [5.7, 4002.0], [5.8, 4002.0], [5.9, 4002.0], [6.0, 4002.0], [6.1, 4002.0], [6.2, 4002.0], [6.3, 4002.0], [6.4, 4002.0], [6.5, 4002.0], [6.6, 4002.0], [6.7, 4002.0], [6.8, 4002.0], [6.9, 4002.0], [7.0, 4002.0], [7.1, 4002.0], [7.2, 4002.0], [7.3, 4002.0], [7.4, 4002.0], [7.5, 4002.0], [7.6, 4002.0], [7.7, 4002.0], [7.8, 4002.0], [7.9, 4002.0], [8.0, 4002.0], [8.1, 4002.0], [8.2, 4002.0], [8.3, 4002.0], [8.4, 4002.0], [8.5, 4002.0], [8.6, 4002.0], [8.7, 4002.0], [8.8, 4002.0], [8.9, 4002.0], [9.0, 4003.0], [9.1, 4003.0], [9.2, 4003.0], [9.3, 4003.0], [9.4, 4003.0], [9.5, 4003.0], [9.6, 4003.0], [9.7, 4003.0], [9.8, 4003.0], [9.9, 4003.0], [10.0, 4003.0], [10.1, 4003.0], [10.2, 4003.0], [10.3, 4003.0], [10.4, 4003.0], [10.5, 4003.0], [10.6, 4003.0], [10.7, 4003.0], [10.8, 4003.0], [10.9, 4003.0], [11.0, 4003.0], [11.1, 4003.0], [11.2, 4003.0], [11.3, 4003.0], [11.4, 4003.0], [11.5, 4003.0], [11.6, 4003.0], [11.7, 4003.0], [11.8, 4003.0], [11.9, 4003.0], [12.0, 4003.0], [12.1, 4003.0], [12.2, 4003.0], [12.3, 4003.0], [12.4, 4003.0], [12.5, 4003.0], [12.6, 4003.0], [12.7, 4003.0], [12.8, 4003.0], [12.9, 4003.0], [13.0, 4003.0], [13.1, 4003.0], [13.2, 4003.0], [13.3, 4003.0], [13.4, 4003.0], [13.5, 4003.0], [13.6, 4003.0], [13.7, 4003.0], [13.8, 4003.0], [13.9, 4003.0], [14.0, 4003.0], [14.1, 4003.0], [14.2, 4003.0], [14.3, 4003.0], [14.4, 4003.0], [14.5, 4003.0], [14.6, 4003.0], [14.7, 4003.0], [14.8, 4003.0], [14.9, 4003.0], [15.0, 4003.0], [15.1, 4003.0], [15.2, 4003.0], [15.3, 4003.0], [15.4, 4003.0], [15.5, 4003.0], [15.6, 4003.0], [15.7, 4003.0], [15.8, 4003.0], [15.9, 4003.0], [16.0, 4003.0], [16.1, 4003.0], [16.2, 4003.0], [16.3, 4003.0], [16.4, 4003.0], [16.5, 4003.0], [16.6, 4003.0], [16.7, 4003.0], [16.8, 4003.0], [16.9, 4003.0], [17.0, 4003.0], [17.1, 4003.0], [17.2, 4003.0], [17.3, 4003.0], [17.4, 4003.0], [17.5, 4003.0], [17.6, 4003.0], [17.7, 4003.0], [17.8, 4003.0], [17.9, 4003.0], [18.0, 4003.0], [18.1, 4003.0], [18.2, 4003.0], [18.3, 4003.0], [18.4, 4003.0], [18.5, 4003.0], [18.6, 4003.0], [18.7, 4003.0], [18.8, 4003.0], [18.9, 4003.0], [19.0, 4003.0], [19.1, 4003.0], [19.2, 4003.0], [19.3, 4003.0], [19.4, 4003.0], [19.5, 4003.0], [19.6, 4003.0], [19.7, 4003.0], [19.8, 4003.0], [19.9, 4003.0], [20.0, 4003.0], [20.1, 4003.0], [20.2, 4003.0], [20.3, 4003.0], [20.4, 4003.0], [20.5, 4003.0], [20.6, 4003.0], [20.7, 4003.0], [20.8, 4003.0], [20.9, 4003.0], [21.0, 4004.0], [21.1, 4004.0], [21.2, 4004.0], [21.3, 4004.0], [21.4, 4004.0], [21.5, 4004.0], [21.6, 4004.0], [21.7, 4004.0], [21.8, 4004.0], [21.9, 4004.0], [22.0, 4004.0], [22.1, 4004.0], [22.2, 4004.0], [22.3, 4004.0], [22.4, 4004.0], [22.5, 4004.0], [22.6, 4004.0], [22.7, 4004.0], [22.8, 4004.0], [22.9, 4004.0], [23.0, 4004.0], [23.1, 4004.0], [23.2, 4004.0], [23.3, 4004.0], [23.4, 4004.0], [23.5, 4004.0], [23.6, 4004.0], [23.7, 4004.0], [23.8, 4004.0], [23.9, 4004.0], [24.0, 4004.0], [24.1, 4004.0], [24.2, 4004.0], [24.3, 4004.0], [24.4, 4004.0], [24.5, 4004.0], [24.6, 4004.0], [24.7, 4004.0], [24.8, 4004.0], [24.9, 4004.0], [25.0, 4004.0], [25.1, 4004.0], [25.2, 4004.0], [25.3, 4004.0], [25.4, 4004.0], [25.5, 4004.0], [25.6, 4004.0], [25.7, 4004.0], [25.8, 4004.0], [25.9, 4004.0], [26.0, 4004.0], [26.1, 4004.0], [26.2, 4004.0], [26.3, 4004.0], [26.4, 4004.0], [26.5, 4004.0], [26.6, 4004.0], [26.7, 4004.0], [26.8, 4004.0], [26.9, 4004.0], [27.0, 4004.0], [27.1, 4004.0], [27.2, 4004.0], [27.3, 4004.0], [27.4, 4004.0], [27.5, 4004.0], [27.6, 4004.0], [27.7, 4004.0], [27.8, 4004.0], [27.9, 4004.0], [28.0, 4004.0], [28.1, 4004.0], [28.2, 4004.0], [28.3, 4004.0], [28.4, 4004.0], [28.5, 4004.0], [28.6, 4004.0], [28.7, 4004.0], [28.8, 4004.0], [28.9, 4004.0], [29.0, 4004.0], [29.1, 4004.0], [29.2, 4004.0], [29.3, 4004.0], [29.4, 4004.0], [29.5, 4004.0], [29.6, 4004.0], [29.7, 4004.0], [29.8, 4004.0], [29.9, 4004.0], [30.0, 4004.0], [30.1, 4004.0], [30.2, 4004.0], [30.3, 4004.0], [30.4, 4004.0], [30.5, 4004.0], [30.6, 4004.0], [30.7, 4004.0], [30.8, 4004.0], [30.9, 4004.0], [31.0, 4005.0], [31.1, 4005.0], [31.2, 4005.0], [31.3, 4005.0], [31.4, 4005.0], [31.5, 4005.0], [31.6, 4005.0], [31.7, 4005.0], [31.8, 4005.0], [31.9, 4005.0], [32.0, 4005.0], [32.1, 4005.0], [32.2, 4005.0], [32.3, 4005.0], [32.4, 4005.0], [32.5, 4005.0], [32.6, 4005.0], [32.7, 4005.0], [32.8, 4005.0], [32.9, 4005.0], [33.0, 4005.0], [33.1, 4005.0], [33.2, 4005.0], [33.3, 4005.0], [33.4, 4005.0], [33.5, 4005.0], [33.6, 4005.0], [33.7, 4005.0], [33.8, 4005.0], [33.9, 4005.0], [34.0, 4005.0], [34.1, 4005.0], [34.2, 4005.0], [34.3, 4005.0], [34.4, 4005.0], [34.5, 4005.0], [34.6, 4005.0], [34.7, 4005.0], [34.8, 4005.0], [34.9, 4005.0], [35.0, 4005.0], [35.1, 4005.0], [35.2, 4005.0], [35.3, 4005.0], [35.4, 4005.0], [35.5, 4005.0], [35.6, 4005.0], [35.7, 4005.0], [35.8, 4005.0], [35.9, 4005.0], [36.0, 4005.0], [36.1, 4005.0], [36.2, 4005.0], [36.3, 4005.0], [36.4, 4005.0], [36.5, 4005.0], [36.6, 4005.0], [36.7, 4005.0], [36.8, 4005.0], [36.9, 4005.0], [37.0, 4005.0], [37.1, 4005.0], [37.2, 4005.0], [37.3, 4005.0], [37.4, 4005.0], [37.5, 4005.0], [37.6, 4005.0], [37.7, 4005.0], [37.8, 4005.0], [37.9, 4005.0], [38.0, 4005.0], [38.1, 4005.0], [38.2, 4005.0], [38.3, 4005.0], [38.4, 4005.0], [38.5, 4005.0], [38.6, 4005.0], [38.7, 4005.0], [38.8, 4005.0], [38.9, 4005.0], [39.0, 4005.0], [39.1, 4005.0], [39.2, 4005.0], [39.3, 4005.0], [39.4, 4005.0], [39.5, 4005.0], [39.6, 4005.0], [39.7, 4005.0], [39.8, 4005.0], [39.9, 4005.0], [40.0, 4006.0], [40.1, 4006.0], [40.2, 4006.0], [40.3, 4006.0], [40.4, 4006.0], [40.5, 4006.0], [40.6, 4006.0], [40.7, 4006.0], [40.8, 4006.0], [40.9, 4006.0], [41.0, 4006.0], [41.1, 4006.0], [41.2, 4006.0], [41.3, 4006.0], [41.4, 4006.0], [41.5, 4006.0], [41.6, 4006.0], [41.7, 4006.0], [41.8, 4006.0], [41.9, 4006.0], [42.0, 4006.0], [42.1, 4006.0], [42.2, 4006.0], [42.3, 4006.0], [42.4, 4006.0], [42.5, 4006.0], [42.6, 4006.0], [42.7, 4006.0], [42.8, 4006.0], [42.9, 4006.0], [43.0, 4006.0], [43.1, 4006.0], [43.2, 4006.0], [43.3, 4006.0], [43.4, 4006.0], [43.5, 4006.0], [43.6, 4006.0], [43.7, 4006.0], [43.8, 4006.0], [43.9, 4006.0], [44.0, 4006.0], [44.1, 4006.0], [44.2, 4006.0], [44.3, 4006.0], [44.4, 4006.0], [44.5, 4006.0], [44.6, 4006.0], [44.7, 4006.0], [44.8, 4006.0], [44.9, 4006.0], [45.0, 4006.0], [45.1, 4006.0], [45.2, 4006.0], [45.3, 4006.0], [45.4, 4006.0], [45.5, 4006.0], [45.6, 4006.0], [45.7, 4006.0], [45.8, 4006.0], [45.9, 4006.0], [46.0, 4006.0], [46.1, 4006.0], [46.2, 4006.0], [46.3, 4006.0], [46.4, 4006.0], [46.5, 4006.0], [46.6, 4006.0], [46.7, 4006.0], [46.8, 4006.0], [46.9, 4006.0], [47.0, 4007.0], [47.1, 4007.0], [47.2, 4007.0], [47.3, 4007.0], [47.4, 4007.0], [47.5, 4007.0], [47.6, 4007.0], [47.7, 4007.0], [47.8, 4007.0], [47.9, 4007.0], [48.0, 4007.0], [48.1, 4007.0], [48.2, 4007.0], [48.3, 4007.0], [48.4, 4007.0], [48.5, 4007.0], [48.6, 4007.0], [48.7, 4007.0], [48.8, 4007.0], [48.9, 4007.0], [49.0, 4007.0], [49.1, 4007.0], [49.2, 4007.0], [49.3, 4007.0], [49.4, 4007.0], [49.5, 4007.0], [49.6, 4007.0], [49.7, 4007.0], [49.8, 4007.0], [49.9, 4007.0], [50.0, 4007.0], [50.1, 4007.0], [50.2, 4007.0], [50.3, 4007.0], [50.4, 4007.0], [50.5, 4007.0], [50.6, 4007.0], [50.7, 4007.0], [50.8, 4007.0], [50.9, 4007.0], [51.0, 4007.0], [51.1, 4007.0], [51.2, 4007.0], [51.3, 4007.0], [51.4, 4007.0], [51.5, 4007.0], [51.6, 4007.0], [51.7, 4007.0], [51.8, 4007.0], [51.9, 4007.0], [52.0, 4007.0], [52.1, 4007.0], [52.2, 4007.0], [52.3, 4007.0], [52.4, 4007.0], [52.5, 4007.0], [52.6, 4007.0], [52.7, 4007.0], [52.8, 4007.0], [52.9, 4007.0], [53.0, 4007.0], [53.1, 4007.0], [53.2, 4007.0], [53.3, 4007.0], [53.4, 4007.0], [53.5, 4007.0], [53.6, 4007.0], [53.7, 4007.0], [53.8, 4007.0], [53.9, 4007.0], [54.0, 4007.0], [54.1, 4007.0], [54.2, 4007.0], [54.3, 4007.0], [54.4, 4007.0], [54.5, 4007.0], [54.6, 4007.0], [54.7, 4007.0], [54.8, 4007.0], [54.9, 4007.0], [55.0, 4008.0], [55.1, 4008.0], [55.2, 4008.0], [55.3, 4008.0], [55.4, 4008.0], [55.5, 4008.0], [55.6, 4008.0], [55.7, 4008.0], [55.8, 4008.0], [55.9, 4008.0], [56.0, 4008.0], [56.1, 4008.0], [56.2, 4008.0], [56.3, 4008.0], [56.4, 4008.0], [56.5, 4008.0], [56.6, 4008.0], [56.7, 4008.0], [56.8, 4008.0], [56.9, 4008.0], [57.0, 4008.0], [57.1, 4008.0], [57.2, 4008.0], [57.3, 4008.0], [57.4, 4008.0], [57.5, 4008.0], [57.6, 4008.0], [57.7, 4008.0], [57.8, 4008.0], [57.9, 4008.0], [58.0, 4008.0], [58.1, 4008.0], [58.2, 4008.0], [58.3, 4008.0], [58.4, 4008.0], [58.5, 4008.0], [58.6, 4008.0], [58.7, 4008.0], [58.8, 4008.0], [58.9, 4008.0], [59.0, 4009.0], [59.1, 4009.0], [59.2, 4009.0], [59.3, 4009.0], [59.4, 4009.0], [59.5, 4009.0], [59.6, 4009.0], [59.7, 4009.0], [59.8, 4009.0], [59.9, 4009.0], [60.0, 4009.0], [60.1, 4009.0], [60.2, 4009.0], [60.3, 4009.0], [60.4, 4009.0], [60.5, 4009.0], [60.6, 4009.0], [60.7, 4009.0], [60.8, 4009.0], [60.9, 4009.0], [61.0, 4009.0], [61.1, 4009.0], [61.2, 4009.0], [61.3, 4009.0], [61.4, 4009.0], [61.5, 4009.0], [61.6, 4009.0], [61.7, 4009.0], [61.8, 4009.0], [61.9, 4009.0], [62.0, 4009.0], [62.1, 4009.0], [62.2, 4009.0], [62.3, 4009.0], [62.4, 4009.0], [62.5, 4009.0], [62.6, 4009.0], [62.7, 4009.0], [62.8, 4009.0], [62.9, 4009.0], [63.0, 4009.0], [63.1, 4009.0], [63.2, 4009.0], [63.3, 4009.0], [63.4, 4009.0], [63.5, 4009.0], [63.6, 4009.0], [63.7, 4009.0], [63.8, 4009.0], [63.9, 4009.0], [64.0, 4011.0], [64.1, 4011.0], [64.2, 4011.0], [64.3, 4011.0], [64.4, 4011.0], [64.5, 4011.0], [64.6, 4011.0], [64.7, 4011.0], [64.8, 4011.0], [64.9, 4011.0], [65.0, 4011.0], [65.1, 4011.0], [65.2, 4011.0], [65.3, 4011.0], [65.4, 4011.0], [65.5, 4011.0], [65.6, 4011.0], [65.7, 4011.0], [65.8, 4011.0], [65.9, 4011.0], [66.0, 4011.0], [66.1, 4011.0], [66.2, 4011.0], [66.3, 4011.0], [66.4, 4011.0], [66.5, 4011.0], [66.6, 4011.0], [66.7, 4011.0], [66.8, 4011.0], [66.9, 4011.0], [67.0, 4012.0], [67.1, 4012.0], [67.2, 4012.0], [67.3, 4012.0], [67.4, 4012.0], [67.5, 4012.0], [67.6, 4012.0], [67.7, 4012.0], [67.8, 4012.0], [67.9, 4012.0], [68.0, 4012.0], [68.1, 4012.0], [68.2, 4012.0], [68.3, 4012.0], [68.4, 4012.0], [68.5, 4012.0], [68.6, 4012.0], [68.7, 4012.0], [68.8, 4012.0], [68.9, 4012.0], [69.0, 4012.0], [69.1, 4012.0], [69.2, 4012.0], [69.3, 4012.0], [69.4, 4012.0], [69.5, 4012.0], [69.6, 4012.0], [69.7, 4012.0], [69.8, 4012.0], [69.9, 4012.0], [70.0, 4013.0], [70.1, 4013.0], [70.2, 4013.0], [70.3, 4013.0], [70.4, 4013.0], [70.5, 4013.0], [70.6, 4013.0], [70.7, 4013.0], [70.8, 4013.0], [70.9, 4013.0], [71.0, 4013.0], [71.1, 4013.0], [71.2, 4013.0], [71.3, 4013.0], [71.4, 4013.0], [71.5, 4013.0], [71.6, 4013.0], [71.7, 4013.0], [71.8, 4013.0], [71.9, 4013.0], [72.0, 4014.0], [72.1, 4014.0], [72.2, 4014.0], [72.3, 4014.0], [72.4, 4014.0], [72.5, 4014.0], [72.6, 4014.0], [72.7, 4014.0], [72.8, 4014.0], [72.9, 4014.0], [73.0, 4014.0], [73.1, 4014.0], [73.2, 4014.0], [73.3, 4014.0], [73.4, 4014.0], [73.5, 4014.0], [73.6, 4014.0], [73.7, 4014.0], [73.8, 4014.0], [73.9, 4014.0], [74.0, 4014.0], [74.1, 4014.0], [74.2, 4014.0], [74.3, 4014.0], [74.4, 4014.0], [74.5, 4014.0], [74.6, 4014.0], [74.7, 4014.0], [74.8, 4014.0], [74.9, 4014.0], [75.0, 4014.0], [75.1, 4014.0], [75.2, 4014.0], [75.3, 4014.0], [75.4, 4014.0], [75.5, 4014.0], [75.6, 4014.0], [75.7, 4014.0], [75.8, 4014.0], [75.9, 4014.0], [76.0, 4015.0], [76.1, 4015.0], [76.2, 4015.0], [76.3, 4015.0], [76.4, 4015.0], [76.5, 4015.0], [76.6, 4015.0], [76.7, 4015.0], [76.8, 4015.0], [76.9, 4015.0], [77.0, 4015.0], [77.1, 4015.0], [77.2, 4015.0], [77.3, 4015.0], [77.4, 4015.0], [77.5, 4015.0], [77.6, 4015.0], [77.7, 4015.0], [77.8, 4015.0], [77.9, 4015.0], [78.0, 4015.0], [78.1, 4015.0], [78.2, 4015.0], [78.3, 4015.0], [78.4, 4015.0], [78.5, 4015.0], [78.6, 4015.0], [78.7, 4015.0], [78.8, 4015.0], [78.9, 4015.0], [79.0, 4016.0], [79.1, 4016.0], [79.2, 4016.0], [79.3, 4016.0], [79.4, 4016.0], [79.5, 4016.0], [79.6, 4016.0], [79.7, 4016.0], [79.8, 4016.0], [79.9, 4016.0], [80.0, 4017.0], [80.1, 4017.0], [80.2, 4017.0], [80.3, 4017.0], [80.4, 4017.0], [80.5, 4017.0], [80.6, 4017.0], [80.7, 4017.0], [80.8, 4017.0], [80.9, 4017.0], [81.0, 4018.0], [81.1, 4018.0], [81.2, 4018.0], [81.3, 4018.0], [81.4, 4018.0], [81.5, 4018.0], [81.6, 4018.0], [81.7, 4018.0], [81.8, 4018.0], [81.9, 4018.0], [82.0, 4020.0], [82.1, 4020.0], [82.2, 4020.0], [82.3, 4020.0], [82.4, 4020.0], [82.5, 4020.0], [82.6, 4020.0], [82.7, 4020.0], [82.8, 4020.0], [82.9, 4020.0], [83.0, 4020.0], [83.1, 4020.0], [83.2, 4020.0], [83.3, 4020.0], [83.4, 4020.0], [83.5, 4020.0], [83.6, 4020.0], [83.7, 4020.0], [83.8, 4020.0], [83.9, 4020.0], [84.0, 4027.0], [84.1, 4027.0], [84.2, 4027.0], [84.3, 4027.0], [84.4, 4027.0], [84.5, 4027.0], [84.6, 4027.0], [84.7, 4027.0], [84.8, 4027.0], [84.9, 4027.0], [85.0, 4029.0], [85.1, 4029.0], [85.2, 4029.0], [85.3, 4029.0], [85.4, 4029.0], [85.5, 4029.0], [85.6, 4029.0], [85.7, 4029.0], [85.8, 4029.0], [85.9, 4029.0], [86.0, 4029.0], [86.1, 4029.0], [86.2, 4029.0], [86.3, 4029.0], [86.4, 4029.0], [86.5, 4029.0], [86.6, 4029.0], [86.7, 4029.0], [86.8, 4029.0], [86.9, 4029.0], [87.0, 4031.0], [87.1, 4031.0], [87.2, 4031.0], [87.3, 4031.0], [87.4, 4031.0], [87.5, 4031.0], [87.6, 4031.0], [87.7, 4031.0], [87.8, 4031.0], [87.9, 4031.0], [88.0, 4034.0], [88.1, 4034.0], [88.2, 4034.0], [88.3, 4034.0], [88.4, 4034.0], [88.5, 4034.0], [88.6, 4034.0], [88.7, 4034.0], [88.8, 4034.0], [88.9, 4034.0], [89.0, 4035.0], [89.1, 4035.0], [89.2, 4035.0], [89.3, 4035.0], [89.4, 4035.0], [89.5, 4035.0], [89.6, 4035.0], [89.7, 4035.0], [89.8, 4035.0], [89.9, 4035.0], [90.0, 4037.0], [90.1, 4037.0], [90.2, 4037.0], [90.3, 4037.0], [90.4, 4037.0], [90.5, 4037.0], [90.6, 4037.0], [90.7, 4037.0], [90.8, 4037.0], [90.9, 4037.0], [91.0, 4037.0], [91.1, 4037.0], [91.2, 4037.0], [91.3, 4037.0], [91.4, 4037.0], [91.5, 4037.0], [91.6, 4037.0], [91.7, 4037.0], [91.8, 4037.0], [91.9, 4037.0], [92.0, 4039.0], [92.1, 4039.0], [92.2, 4039.0], [92.3, 4039.0], [92.4, 4039.0], [92.5, 4039.0], [92.6, 4039.0], [92.7, 4039.0], [92.8, 4039.0], [92.9, 4039.0], [93.0, 4043.0], [93.1, 4043.0], [93.2, 4043.0], [93.3, 4043.0], [93.4, 4043.0], [93.5, 4043.0], [93.6, 4043.0], [93.7, 4043.0], [93.8, 4043.0], [93.9, 4043.0], [94.0, 4044.0], [94.1, 4044.0], [94.2, 4044.0], [94.3, 4044.0], [94.4, 4044.0], [94.5, 4044.0], [94.6, 4044.0], [94.7, 4044.0], [94.8, 4044.0], [94.9, 4044.0], [95.0, 4047.0], [95.1, 4047.0], [95.2, 4047.0], [95.3, 4047.0], [95.4, 4047.0], [95.5, 4047.0], [95.6, 4047.0], [95.7, 4047.0], [95.8, 4047.0], [95.9, 4047.0], [96.0, 4052.0], [96.1, 4052.0], [96.2, 4052.0], [96.3, 4052.0], [96.4, 4052.0], [96.5, 4052.0], [96.6, 4052.0], [96.7, 4052.0], [96.8, 4052.0], [96.9, 4052.0], [97.0, 4054.0], [97.1, 4054.0], [97.2, 4054.0], [97.3, 4054.0], [97.4, 4054.0], [97.5, 4054.0], [97.6, 4054.0], [97.7, 4054.0], [97.8, 4054.0], [97.9, 4054.0], [98.0, 4058.0], [98.1, 4058.0], [98.2, 4058.0], [98.3, 4058.0], [98.4, 4058.0], [98.5, 4058.0], [98.6, 4058.0], [98.7, 4058.0], [98.8, 4058.0], [98.9, 4058.0], [99.0, 4060.0], [99.1, 4060.0], [99.2, 4060.0], [99.3, 4060.0], [99.4, 4060.0], [99.5, 4060.0], [99.6, 4060.0], [99.7, 4060.0], [99.8, 4060.0], [99.9, 4060.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 25.0, "minX": 4000.0, "maxY": 1000.0, "series": [{"data": [[4500.0, 27.0], [4000.0, 973.0]], "isOverall": false, "label": "All_projects", "isController": false}, {"data": [[4000.0, 1000.0]], "isOverall": false, "label": "All_users", "isController": false}, {"data": [[4500.0, 25.0], [4000.0, 975.0]], "isOverall": false, "label": "All_Tasks", "isController": false}, {"data": [[4000.0, 100.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 500, "maxX": 4500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 3100.0, "minX": 3.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 3100.0, "series": [{"data": [[3.0, 3100.0]], "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 34.980000000000004, "minX": 1.5899181E12, "maxY": 382.08699999999953, "series": [{"data": [[1.5899181E12, 379.64099999999985]], "isOverall": false, "label": "Get Project Thread Group", "isController": false}, {"data": [[1.5899181E12, 382.08699999999953]], "isOverall": false, "label": "Get Task Thread Group", "isController": false}, {"data": [[1.5899181E12, 34.980000000000004]], "isOverall": false, "label": "Post Project Thread Group", "isController": false}, {"data": [[1.5899181E12, 35.04]], "isOverall": false, "label": "Post Task Thread Group", "isController": false}, {"data": [[1.5899181E12, 381.48399999999987]], "isOverall": false, "label": "Get User Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5899181E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 4000.0, "minX": 54.0, "maxY": 4220.014251781477, "series": [{"data": [[290.0, 4081.0], [312.0, 4073.0], [310.0, 4074.0], [335.0, 4068.0], [333.0, 4066.0], [332.0, 4066.0], [329.0, 4068.0], [323.0, 4069.0], [321.0, 4070.0], [365.0, 4010.5], [352.0, 4129.0], [381.0, 4023.0], [383.0, 4024.0], [380.0, 4025.0], [379.0, 4022.0], [377.0, 4022.0], [376.0, 4024.0], [375.0, 4023.0], [372.0, 4022.0], [371.0, 4024.37037037037], [398.0, 4026.0], [397.0, 4027.0], [396.0, 4025.0], [394.0, 4026.0], [392.0, 4030.0], [391.0, 4025.0], [389.0, 4025.0], [387.0, 4025.0], [414.0, 4067.0], [412.0, 4045.5], [410.0, 4068.0], [405.0, 4071.0], [403.0, 4070.0], [402.0, 4072.0], [401.0, 4027.0], [430.0, 4058.0], [428.0, 4022.0], [427.0, 4059.0], [425.0, 4060.0], [424.0, 4063.5], [423.0, 4064.0], [422.0, 4063.0], [421.0, 4063.0], [419.0, 4063.0], [417.0, 4065.0], [446.0, 4054.0], [442.0, 4022.0], [437.0, 4020.0], [436.0, 4020.0], [434.0, 4040.5], [432.0, 4059.0], [462.0, 4019.0], [463.0, 4019.0], [461.0, 4049.0], [459.0, 4019.0], [458.0, 4021.0], [456.0, 4020.0], [455.0, 4019.0], [452.0, 4021.0], [451.0, 4037.0], [448.0, 4052.0], [476.0, 4022.5], [471.0, 4045.0], [470.0, 4045.0], [469.0, 4023.0], [468.0, 4039.5], [466.0, 4019.0], [464.0, 4019.0], [493.0, 4026.0], [491.0, 4037.0], [489.0, 4037.0], [488.0, 4020.0], [487.0, 4021.0], [480.0, 4017.0], [486.0, 4037.0], [485.0, 4038.0], [483.0, 4025.0], [482.0, 4027.3333333333335], [509.0, 4015.0], [505.0, 4020.0], [498.0, 4034.0], [497.0, 4023.0], [541.0, 4004.0], [535.0, 4009.0], [530.0, 4010.0], [529.0, 4008.0], [523.0, 4022.0], [520.0, 4023.0], [519.0, 4029.0], [518.0, 4031.0], [516.0, 4010.0], [515.0, 4033.0], [514.0, 4013.0], [571.0, 4008.0], [574.0, 4009.0], [569.0, 4005.6666666666665], [568.0, 4002.0], [566.0, 4006.0], [565.0, 4004.0], [563.0, 4007.0], [561.0, 4008.0], [559.0, 4007.5], [547.0, 4012.0], [545.0, 4007.0], [555.0, 4012.0], [554.0, 4012.0], [553.0, 4011.0], [552.0, 4012.0], [582.0, 4009.0], [601.0, 4006.0], [598.0, 4005.0], [594.0, 4007.0], [590.0, 4006.0], [585.0, 4007.0], [581.0, 4010.0], [579.0, 4007.0], [576.0, 4008.0], [730.0, 4002.0], [735.0, 4002.0], [729.0, 4001.0], [728.0, 4001.5], [726.0, 4003.0], [724.0, 4003.0], [719.0, 4003.0], [711.0, 4005.0], [707.0, 4004.0], [746.0, 4002.5], [744.0, 4001.0], [741.0, 4003.0], [738.0, 4003.0], [737.0, 4004.0], [786.0, 4002.0], [785.0, 4003.0], [780.0, 4005.0], [778.0, 4005.0], [776.0, 4003.0], [773.0, 4005.0], [860.0, 4003.0], [853.0, 4006.0], [849.0, 4010.0], [845.0, 4003.0], [841.0, 4003.0], [839.0, 4003.0], [871.0, 4004.0], [891.0, 4004.0], [889.0, 4002.5], [886.0, 4005.0], [883.0, 4006.0], [878.0, 4003.6666666666665], [873.0, 4002.0], [872.0, 4004.0], [869.0, 4003.0], [867.0, 4003.0], [864.0, 4002.0], [923.0, 4005.0], [926.0, 4005.0], [922.0, 4003.0], [921.0, 4005.0], [918.0, 4007.0], [917.0, 4002.0], [915.0, 4004.0], [906.0, 4003.5], [897.0, 4005.0], [903.0, 4004.0], [902.0, 4004.0], [935.0, 4001.0], [956.0, 4008.6666666666665], [959.0, 4002.0], [955.0, 4009.0], [950.0, 4005.0], [946.0, 4001.0], [939.0, 4003.0], [937.0, 4009.0], [931.0, 4012.0], [929.0, 4006.0], [986.0, 4002.0], [991.0, 4002.0], [990.0, 4008.0], [988.0, 4003.0], [983.0, 4002.0], [974.0, 4002.5], [972.0, 4004.0], [967.0, 4004.0], [963.0, 4001.3333333333335], [960.0, 4002.0], [998.0, 4004.0], [1018.0, 4002.0], [1021.0, 4002.0], [1016.0, 4002.5], [1012.0, 4002.0], [1009.0, 4002.0], [1005.0, 4001.0], [1001.0, 4003.0], [995.0, 4002.0], [994.0, 4002.0], [1081.0, 4006.0], [1084.0, 4067.0], [1076.0, 4002.0], [1072.0, 4004.0], [1069.0, 4004.0], [1067.0, 4004.0], [1066.0, 4002.5], [1063.0, 4007.0], [1055.0, 4006.0], [1030.0, 4003.0], [1028.0, 4004.0], [1032.0, 4002.0], [1031.0, 4004.0], [1036.0, 4005.0], [1033.0, 4004.0], [1053.0, 4005.0], [1051.0, 4002.0], [1049.0, 4001.0], [1044.0, 4003.0], [1043.0, 4003.0], [1042.0, 4002.0], [1137.0, 4017.0], [1150.0, 4005.0], [1151.0, 4006.0], [1125.0, 4019.0], [1148.0, 4004.0], [1146.0, 4006.0], [1144.0, 4002.0], [1118.0, 4017.0], [1088.0, 4065.0], [1093.0, 4003.0], [1089.0, 4064.0], [1095.0, 4004.0], [1094.0, 4065.0], [1100.0, 4044.0], [1098.0, 4048.0], [1102.0, 4022.5], [1101.0, 4046.0], [1115.0, 4002.0], [1113.0, 4002.0], [1110.0, 4038.0], [1109.0, 4001.5], [1104.0, 4044.0], [1133.0, 4017.0], [1130.0, 4014.0], [1129.0, 4015.0], [1126.0, 4021.0], [1186.0, 4004.0], [1213.0, 4004.0], [1212.0, 4004.0], [1207.0, 4005.0], [1202.0, 4002.0], [1181.0, 4004.6666666666665], [1153.0, 4002.0], [1159.0, 4003.0], [1156.0, 4003.0], [1163.0, 4003.0], [1160.0, 4005.0], [1175.0, 4004.0], [1171.0, 4003.0], [1170.0, 4004.5], [1168.0, 4005.0], [1195.0, 4004.0], [1191.0, 4005.0], [1190.0, 4005.0], [1185.0, 4004.0], [1184.0, 4004.0], [1254.0, 4002.0], [1270.0, 4003.0], [1276.0, 4004.0], [1251.0, 4002.0], [1268.0, 4003.0], [1265.0, 4002.0], [1264.0, 4003.0], [1230.0, 4002.0], [1229.0, 4002.0], [1228.0, 4006.0], [1225.0, 4002.0], [1224.0, 4004.0], [1217.0, 4007.0], [1247.0, 4002.0], [1244.0, 4004.0], [1233.0, 4009.0], [1261.0, 4004.0], [1259.0, 4004.0], [1258.0, 4003.0], [1336.0, 4005.0], [1342.0, 4005.0], [1313.0, 4011.0], [1312.0, 4002.5], [1323.0, 4006.0], [1315.0, 4001.0], [1338.0, 4007.0], [1337.0, 4005.0], [1335.0, 4005.0], [1334.0, 4007.0], [1333.0, 4005.0], [1332.0, 4010.0], [1330.0, 4007.0], [1293.0, 4003.0], [1291.0, 4002.0], [1288.0, 4001.0], [1283.0, 4001.5], [1280.0, 4003.0], [1304.0, 4002.5], [1300.0, 4000.0], [1298.0, 4003.0], [1398.0, 4002.0], [1406.0, 4001.0], [1381.0, 4007.0], [1378.0, 4008.5], [1387.0, 4017.0], [1382.0, 4008.0], [1404.0, 4004.0], [1402.0, 4003.0], [1397.0, 4003.0], [1394.0, 4003.0], [1393.0, 4003.0], [1392.0, 4009.0], [1375.0, 4007.0], [1348.0, 4032.0], [1344.0, 4003.0], [1356.0, 4005.0], [1352.0, 4002.0], [1373.0, 4009.0], [1370.0, 4003.5], [1367.0, 4005.0], [1362.0, 4004.0], [1361.0, 4004.0], [1390.0, 4005.0], [1388.0, 4001.0], [1460.0, 4006.0], [1446.0, 4002.0], [1465.0, 4003.25], [1470.0, 4002.0], [1445.0, 4003.0], [1461.0, 4003.0], [1459.0, 4005.0], [1422.0, 4001.0], [1418.0, 4002.0], [1416.0, 4002.0], [1413.0, 4011.0], [1412.0, 4001.5], [1410.0, 4002.0], [1408.0, 4001.0], [1434.0, 4003.0], [1431.0, 4001.0], [1424.0, 4001.0], [1453.0, 4026.0], [1452.0, 4003.0], [1450.0, 4002.6666666666665], [1483.0, 4003.0], [1499.0, 4005.0], [1476.0, 4004.0], [1474.0, 4002.3333333333335], [1497.0, 4001.5], [1494.0, 4004.0], [1489.0, 4005.0], [1486.0, 4009.0], [1485.0, 4006.0], [1484.0, 4005.0], [1481.0, 4005.0], [1480.0, 4003.0], [1594.0, 4005.6956521739125], [1597.0, 4009.0571428571434], [1596.0, 4020.25], [1595.0, 4006.5555555555557], [1593.0, 4020.25], [1592.0, 4009.0000000000005], [1591.0, 4005.8], [1590.0, 4005.0], [1589.0, 4003.6], [1588.0, 4003.761904761905], [1587.0, 4007.0], [1586.0, 4004.0909090909095], [1600.0, 4146.858858858861]], "isOverall": false, "label": "All_projects", "isController": false}, {"data": [[1235.0000000000018, 4057.6739999999986]], "isOverall": false, "label": "All_projects-Aggregated", "isController": false}, {"data": [[54.0, 4006.6666666666665], [61.0, 4005.0], [63.0, 4008.0], [62.0, 4004.3333333333335], [66.0, 4004.0], [64.0, 4004.0], [70.0, 4004.0], [68.0, 4004.0], [75.0, 4004.0], [74.0, 4004.0], [73.0, 4004.0], [72.0, 4004.0], [79.0, 4004.0], [78.0, 4007.0], [76.0, 4005.0], [83.0, 4003.6666666666665], [82.0, 4005.0], [81.0, 4004.5], [80.0, 4004.0], [87.0, 4003.5], [86.0, 4002.0], [85.0, 4003.0], [89.0, 4007.0], [99.0, 4003.3333333333335], [116.0, 4005.0], [123.0, 4001.6666666666665], [122.0, 4003.5], [126.0, 4004.6666666666665], [130.0, 4004.0], [141.0, 4004.0], [159.0, 4004.0], [179.0, 4005.0], [203.0, 4003.0], [222.0, 4003.0], [229.0, 4003.0], [227.0, 4004.0], [237.0, 4004.0], [236.0, 4003.0], [247.0, 4004.0], [246.0, 4003.0], [245.0, 4005.0], [244.0, 4004.0], [243.0, 4002.5], [242.0, 4006.0], [241.0, 4003.0], [254.0, 4002.3333333333335], [253.0, 4005.0], [260.0, 4002.0], [259.0, 4003.0], [282.0, 4003.0], [277.0, 4003.8], [276.0, 4007.0], [273.0, 4004.0], [295.0, 4004.0], [291.0, 4003.0], [315.0, 4002.25], [314.0, 4002.0], [313.0, 4072.0], [312.0, 4002.3333333333335], [305.0, 4040.0], [306.0, 4039.0], [332.0, 4001.0], [331.0, 4001.5], [350.0, 4001.6666666666665], [349.0, 4004.0], [347.0, 4001.0], [345.0, 4031.0], [338.0, 4001.0], [364.0, 4004.0], [362.0, 4004.0], [361.0, 4003.0], [360.0, 4002.0], [359.0, 4002.0], [356.0, 4001.3333333333335], [354.0, 4002.0], [382.0, 4025.0], [380.0, 4022.0], [374.0, 4025.0], [370.0, 4055.0], [371.0, 4010.2941176470586], [399.0, 4072.5], [415.0, 4066.0], [412.0, 4066.0], [410.0, 4066.0], [408.0, 4067.5], [407.0, 4069.0], [403.0, 4025.0], [400.0, 4073.0], [427.0, 4020.0], [422.0, 4063.0], [420.0, 4064.0], [418.0, 4063.0], [445.0, 4018.0], [447.0, 4053.5], [444.0, 4054.0], [433.0, 4019.0], [442.0, 4054.0], [441.0, 4056.0], [440.0, 4056.0], [439.0, 4057.0], [438.0, 4021.0], [437.0, 4056.0], [436.0, 4059.0], [458.0, 4049.0], [455.0, 4035.0], [453.0, 4051.0], [452.0, 4052.0], [449.0, 4053.0], [448.0, 4052.0], [474.0, 4046.0], [469.0, 4018.0], [468.0, 4046.0], [493.0, 4025.0], [490.0, 4027.5], [511.0, 4012.0], [505.0, 4028.0], [504.0, 4036.0], [502.0, 4027.0], [501.0, 4034.0], [539.0, 4021.0], [542.0, 4015.0], [538.0, 4009.0], [537.0, 4020.0], [532.0, 4023.0], [530.0, 4009.0], [525.0, 4027.0], [524.0, 4011.0], [514.0, 4010.0], [574.0, 4008.0], [570.0, 4006.0], [568.0, 4003.0], [565.0, 4005.0], [561.0, 4008.0], [558.0, 4012.0], [550.0, 4012.0], [547.0, 4014.0], [603.0, 4006.0], [607.0, 4006.5], [601.0, 4005.0], [581.0, 4009.0], [579.0, 4007.0], [598.0, 4010.5], [596.0, 4010.0], [595.0, 4011.0], [594.0, 4011.0], [590.0, 4009.0], [588.0, 4008.0], [587.0, 4008.0], [586.0, 4008.0], [585.0, 4005.0], [637.0, 4002.0], [639.0, 4001.5], [636.0, 4001.5], [634.0, 4002.0], [633.0, 4002.5], [615.0, 4003.5], [613.0, 4002.0], [612.0, 4005.0], [611.0, 4004.5], [609.0, 4005.0], [622.0, 4002.0], [620.0, 4003.0], [619.0, 4003.0], [618.0, 4003.6666666666665], [631.0, 4004.0], [630.0, 4005.0], [627.0, 4004.0], [625.0, 4003.0], [666.0, 4002.0], [658.0, 4004.0], [669.0, 4004.0], [670.0, 4003.0], [657.0, 4004.0], [668.0, 4003.0], [665.0, 4002.0], [647.0, 4005.0], [646.0, 4008.0], [645.0, 4011.0], [643.0, 4002.5], [655.0, 4064.0], [654.0, 4005.0], [653.0, 4011.0], [652.0, 4027.0], [651.0, 4007.0], [650.0, 4009.0], [649.0, 4006.0], [648.0, 4005.0], [663.0, 4003.0], [661.0, 4002.5], [659.0, 4001.0], [700.0, 4004.0], [691.0, 4002.0], [702.0, 4004.0], [703.0, 4002.0], [690.0, 4000.0], [688.0, 4001.5], [701.0, 4005.0], [699.0, 4002.5], [679.0, 4001.0], [678.0, 4001.5], [677.0, 4001.0], [675.0, 4001.0], [674.0, 4003.5], [672.0, 4003.5], [686.0, 4001.0], [684.0, 4002.0], [683.0, 4002.0], [682.0, 4004.0], [680.0, 4002.0], [694.0, 4002.0], [693.0, 4002.0], [692.0, 4005.0], [718.0, 4002.0], [720.0, 4002.0], [716.0, 4002.0], [715.0, 4001.0], [714.0, 4004.0], [713.0, 4003.0], [711.0, 4002.0], [710.0, 4005.0], [709.0, 4002.0], [708.0, 4003.0], [706.0, 4003.0], [705.0, 4003.0], [704.0, 4001.0], [766.0, 4001.0], [763.0, 4003.0], [762.0, 4002.0], [752.0, 4003.0], [749.0, 4002.0], [778.0, 4003.0], [775.0, 4003.0], [823.0, 4007.0], [816.0, 4003.0], [806.0, 4003.0], [804.0, 4002.0], [803.0, 4003.0], [801.0, 4002.0], [858.0, 4003.0], [857.0, 4002.5], [855.0, 4001.0], [832.0, 4005.0], [886.0, 4004.0], [884.0, 4002.5], [877.0, 4002.0], [925.0, 4003.0], [916.0, 4002.5], [901.0, 4001.0], [948.0, 4011.0], [945.0, 4002.0], [940.0, 4001.0], [939.0, 4002.0], [936.0, 4008.0], [935.0, 4002.0], [990.0, 4009.0], [983.0, 4008.0], [978.0, 4001.0], [976.0, 4002.0], [967.0, 4000.0], [964.0, 4001.0], [1014.0, 4003.0], [1009.0, 4001.0], [1006.0, 4001.0], [996.0, 4001.0], [992.0, 4002.0], [1082.0, 4002.0], [1085.0, 4068.0], [1079.0, 4003.0], [1077.0, 4002.0], [1076.0, 4065.0], [1074.0, 4002.3333333333335], [1050.0, 4004.0], [1034.0, 4005.0], [1027.0, 4002.0], [1047.0, 4004.0], [1045.0, 4005.0], [1068.0, 4002.0], [1064.0, 4005.0], [1062.0, 4004.0], [1058.0, 4003.0], [1139.0, 4002.0], [1126.0, 4018.0], [1143.0, 4004.0], [1144.0, 4003.0], [1122.0, 4002.0], [1120.0, 4003.0], [1142.0, 4002.0], [1138.0, 4011.0], [1103.0, 4041.0], [1098.0, 4002.0], [1097.0, 4060.0], [1093.0, 4033.0], [1089.0, 4063.0], [1117.0, 4034.0], [1113.0, 4037.0], [1111.0, 4037.0], [1107.0, 4042.0], [1106.0, 4046.0], [1133.0, 4014.0], [1132.0, 4014.0], [1127.0, 4003.0], [1211.0, 4003.0], [1204.0, 4005.0], [1166.0, 4003.0], [1163.0, 4006.0], [1158.0, 4009.0], [1198.0, 4003.0], [1197.0, 4005.5], [1195.0, 4005.0], [1192.0, 4005.0], [1186.0, 4004.5], [1182.0, 4004.0], [1173.0, 4005.0], [1172.0, 4003.0], [1271.0, 4002.0], [1276.0, 4004.0], [1267.0, 4005.0], [1229.0, 4003.0], [1216.0, 4005.0], [1252.0, 4004.0], [1250.0, 4005.0], [1245.0, 4001.0], [1243.0, 4002.0], [1239.0, 4001.0], [1233.0, 4002.0], [1340.0, 4006.0], [1341.0, 4007.0], [1329.0, 4011.5], [1293.0, 4003.0], [1283.0, 4004.0], [1326.0, 4006.0], [1319.0, 4006.0], [1314.0, 4002.0], [1312.0, 4002.0], [1309.0, 4001.0], [1308.0, 4009.0], [1305.0, 4004.0], [1304.0, 4002.0], [1301.0, 4001.0], [1356.0, 4004.0], [1389.0, 4007.0], [1386.0, 4016.0], [1367.0, 4006.0], [1346.0, 4016.0], [1348.0, 4011.0], [1347.0, 4015.0], [1350.0, 4002.0], [1349.0, 4002.0], [1364.0, 4003.0], [1363.0, 4001.0], [1361.0, 4002.0], [1359.0, 4010.6666666666665], [1353.0, 4004.0], [1352.0, 4004.0], [1466.0, 4003.0], [1436.0, 4002.0], [1431.0, 4002.0], [1421.0, 4003.0], [1529.0, 4004.0], [1533.0, 4005.0], [1504.0, 4005.0], [1506.0, 4005.375], [1505.0, 4003.8], [1508.0, 4004.0], [1507.0, 4004.0], [1532.0, 4004.75], [1530.0, 4003.4444444444443], [1528.0, 4003.75], [1527.0, 4003.0], [1526.0, 4006.8], [1525.0, 4010.6666666666665], [1502.0, 4009.0], [1515.0, 4003.0], [1509.0, 4003.0], [1574.0, 4003.2], [1591.0, 4010.3076923076924], [1597.0, 4007.3333333333335], [1596.0, 4023.5], [1568.0, 4003.0], [1571.0, 4003.0], [1570.0, 4005.8333333333335], [1573.0, 4006.1666666666665], [1572.0, 4003.818181818182], [1575.0, 4003.0], [1577.0, 4003.7], [1576.0, 4005.0], [1581.0, 4005.6], [1579.0, 4003.0], [1583.0, 4009.5], [1582.0, 4032.5806451612902], [1594.0, 4004.3846153846152], [1592.0, 4011.55], [1593.0, 4006.6666666666665], [1590.0, 4005.7499999999995], [1589.0, 4006.75], [1588.0, 4003.5833333333335], [1587.0, 4005.181818181818], [1586.0, 4004.5], [1585.0, 4006.05], [1584.0, 4006.5], [1551.0, 4023.909090909091], [1549.0, 4002.0], [1550.0, 4003.0], [1547.0, 4003.3333333333335], [1545.0, 4003.0], [1544.0, 4002.0], [1538.0, 4005.333333333333], [1565.0, 4003.0], [1566.0, 4003.0], [1541.0, 4000.0], [1543.0, 4001.0], [1563.0, 4005.0], [1560.0, 4007.0], [1559.0, 4002.0], [1557.0, 4012.478260869565], [1558.0, 4019.317073170732], [1556.0, 4021.045454545454], [1554.0, 4028.586206896551], [1553.0, 4036.5], [1552.0, 4041.4285714285716], [1600.0, 4099.939393939393]], "isOverall": false, "label": "All_users", "isController": false}, {"data": [[1102.9260000000004, 4014.2019999999948]], "isOverall": false, "label": "All_users-Aggregated", "isController": false}, {"data": [[302.0, 4079.0], [299.0, 4077.0], [294.0, 4081.0], [317.0, 4073.0], [314.0, 4070.0], [307.0, 4076.0], [305.0, 4078.0], [325.0, 4069.0], [347.0, 4061.0], [346.0, 4061.0], [343.0, 4062.5], [340.0, 4063.0], [338.0, 4065.0], [336.0, 4066.0], [364.0, 4008.0], [362.0, 4012.0], [365.0, 4032.5], [352.0, 4063.0], [378.0, 4021.0], [377.0, 4022.0], [373.0, 4021.0], [368.0, 4054.0], [371.0, 4032.0394736842113], [398.0, 4025.0], [396.0, 4025.0], [391.0, 4025.0], [387.0, 4043.0], [386.0, 4026.0], [385.0, 4026.0], [384.0, 4023.5], [404.0, 4026.0], [430.0, 4023.0], [424.0, 4037.0], [423.0, 4022.0], [417.0, 4022.0], [443.0, 4021.0], [436.0, 4023.0], [432.0, 4022.0], [461.0, 4021.5], [457.0, 4049.0], [452.0, 4020.0], [477.0, 4045.0], [473.0, 4019.5], [466.0, 4047.0], [465.0, 4020.0], [495.0, 4026.0], [494.0, 4020.0], [490.0, 4025.0], [489.0, 4023.5], [484.0, 4021.0], [480.0, 4030.5], [510.0, 4013.0], [508.0, 4013.0], [507.0, 4014.0], [504.0, 4034.0], [501.0, 4033.0], [499.0, 4031.0], [497.0, 4016.0], [541.0, 4006.0], [543.0, 4017.0], [537.0, 4021.0], [517.0, 4015.0], [512.0, 4033.0], [534.0, 4010.0], [533.0, 4011.0], [529.0, 4008.0], [527.0, 4011.5], [526.0, 4027.0], [524.0, 4027.0], [523.0, 4009.0], [551.0, 4005.5], [571.0, 4005.0], [568.0, 4003.0], [561.0, 4006.0], [560.0, 4007.0], [556.0, 4009.0], [549.0, 4013.0], [546.0, 4015.0], [545.0, 4016.0], [544.0, 4006.0], [656.0, 4045.0], [734.0, 4003.0], [733.0, 4001.5], [732.0, 4003.0], [727.0, 4003.0], [724.0, 4002.0], [723.0, 4002.5], [719.0, 4003.0], [762.0, 4004.0], [765.0, 4004.0], [760.0, 4006.0], [743.0, 4002.0], [741.0, 4002.0], [739.0, 4002.5], [757.0, 4004.0], [756.0, 4001.5], [754.0, 4003.0], [753.0, 4003.0], [751.0, 4003.0], [750.0, 4003.0], [747.0, 4002.0], [745.0, 4002.0], [798.0, 4006.0], [799.0, 4001.0], [796.0, 4001.5], [793.0, 4003.0], [791.0, 4003.0], [790.0, 4003.0], [788.0, 4002.0], [784.0, 4004.0], [783.0, 4004.0], [769.0, 4004.0], [768.0, 4003.0], [771.0, 4002.0], [770.0, 4003.0], [774.0, 4003.0], [773.0, 4003.0], [782.0, 4003.0], [781.0, 4004.0], [778.0, 4004.0], [825.0, 4005.5], [829.0, 4005.0], [830.0, 4004.0], [819.0, 4005.0], [818.0, 4004.5], [828.0, 4004.0], [827.0, 4003.0], [826.0, 4005.0], [824.0, 4008.5], [806.0, 4005.0], [805.0, 4005.0], [802.0, 4007.0], [815.0, 4007.0], [814.0, 4003.0], [813.0, 4002.0], [812.0, 4006.5], [811.0, 4004.0], [810.0, 4004.0], [809.0, 4006.0], [808.0, 4007.0], [822.0, 4003.0], [821.0, 4005.5], [857.0, 4004.0], [861.0, 4004.0], [856.0, 4001.0], [839.0, 4004.0], [838.0, 4002.0], [837.0, 4005.0], [836.0, 4008.0], [835.0, 4008.0], [832.0, 4008.0], [851.0, 4007.0], [850.0, 4002.0], [849.0, 4008.0], [847.0, 4009.0], [846.0, 4002.0], [844.0, 4002.0], [841.0, 4003.0], [889.0, 4003.0], [894.0, 4004.0], [893.0, 4003.0], [891.0, 4005.0], [881.0, 4002.0], [879.0, 4003.0], [877.0, 4004.0], [871.0, 4004.5], [867.0, 4005.0], [864.0, 4003.5], [924.0, 4004.0], [926.0, 4005.0], [923.0, 4002.0], [921.0, 4003.0], [920.0, 4005.0], [901.0, 4003.0], [898.0, 4003.0], [897.0, 4006.0], [909.0, 4002.0], [906.0, 4003.0], [918.0, 4006.0], [917.0, 4004.0], [914.0, 4001.0], [913.0, 4004.0], [946.0, 4002.0], [959.0, 4002.0], [957.0, 4002.0], [955.0, 4002.0], [951.0, 4010.0], [950.0, 4002.0], [947.0, 4006.0], [944.0, 4015.0], [936.0, 4015.0], [928.0, 4016.0], [933.0, 4003.0], [930.0, 4002.0], [934.0, 4010.0], [990.0, 4003.0], [988.0, 4002.0], [986.0, 4007.0], [983.0, 4002.0], [982.0, 4002.0], [978.0, 4002.0], [974.0, 4003.0], [970.0, 4003.0], [1007.0, 4002.0], [1023.0, 4002.0], [1021.0, 4002.0], [1016.0, 4005.0], [999.0, 4002.0], [998.0, 4003.0], [1012.0, 4003.5], [1005.0, 4004.0], [1004.0, 4005.0], [1003.0, 4002.0], [1001.0, 4002.0], [1079.0, 4004.0], [1060.0, 4004.0], [1086.0, 4064.0], [1083.0, 4002.0], [1080.0, 4005.0], [1055.0, 4006.0], [1025.0, 4004.0], [1036.0, 4004.0], [1026.0, 4003.0], [1038.0, 4005.0], [1037.0, 4003.0], [1054.0, 4002.0], [1049.0, 4005.0], [1048.0, 4002.0], [1043.0, 4004.0], [1042.0, 4005.0], [1070.0, 4003.0], [1066.0, 4007.0], [1065.0, 4005.0], [1057.0, 4006.0], [1056.0, 4009.0], [1148.0, 4004.5], [1150.0, 4007.0], [1146.0, 4003.0], [1139.0, 4010.0], [1136.0, 4002.5], [1095.0, 4060.0], [1131.0, 4002.0], [1127.0, 4003.0], [1125.0, 4016.0], [1119.0, 4003.0], [1118.0, 4002.0], [1115.0, 4003.0], [1106.0, 4001.0], [1209.0, 4003.0], [1210.0, 4004.0], [1187.0, 4006.0], [1184.0, 4004.0], [1207.0, 4005.0], [1206.0, 4005.0], [1204.0, 4005.0], [1201.0, 4005.0], [1180.0, 4003.5], [1156.0, 4003.0], [1152.0, 4005.0], [1178.0, 4005.0], [1176.0, 4007.0], [1174.0, 4004.0], [1199.0, 4005.0], [1194.0, 4005.5], [1195.0, 4005.0], [1278.0, 4002.5], [1279.0, 4002.0], [1249.0, 4004.5], [1252.0, 4003.0], [1251.0, 4004.0], [1256.0, 4004.0], [1254.0, 4004.0], [1273.0, 4001.5], [1270.0, 4002.0], [1266.0, 4003.0], [1264.0, 4005.0], [1245.0, 4003.0], [1224.0, 4005.0], [1222.0, 4006.0], [1219.0, 4003.3333333333335], [1216.0, 4003.0], [1233.0, 4002.0], [1262.0, 4003.0], [1261.0, 4002.0], [1258.0, 4002.0], [1257.0, 4004.0], [1331.0, 4009.0], [1340.0, 4008.0], [1337.0, 4005.0], [1335.0, 4005.0], [1328.0, 4008.0], [1327.0, 4009.0], [1308.0, 4002.5], [1300.0, 4003.0], [1295.0, 4005.0], [1293.0, 4005.0], [1292.0, 4003.5], [1287.0, 4003.0], [1285.0, 4002.0], [1282.0, 4005.0], [1281.0, 4002.0], [1405.0, 4002.0], [1406.0, 4002.0], [1378.0, 4007.0], [1402.0, 4001.0], [1400.0, 4010.0], [1397.0, 4002.0], [1392.0, 4028.0], [1374.0, 4003.0], [1347.0, 4004.0], [1346.0, 4002.0], [1373.0, 4005.0], [1370.0, 4005.0], [1386.0, 4005.0], [1384.0, 4006.5], [1381.0, 4008.0], [1380.0, 4008.0], [1423.0, 4002.0], [1442.0, 4003.0], [1471.0, 4002.0], [1470.0, 4002.6666666666665], [1460.0, 4003.0], [1421.0, 4002.0], [1419.0, 4001.0], [1418.0, 4003.0], [1416.0, 4002.0], [1414.0, 4002.0], [1410.0, 4002.0], [1408.0, 4002.0], [1451.0, 4002.0], [1450.0, 4003.0], [1444.0, 4001.5], [1441.0, 4002.5], [1439.0, 4002.3333333333335], [1435.0, 4003.0], [1434.0, 4002.0], [1428.0, 4001.0], [1427.0, 4002.3333333333335], [1493.0, 4004.0], [1500.0, 4017.0], [1476.0, 4003.0], [1498.0, 4016.0], [1495.0, 4002.0], [1492.0, 4005.0], [1491.0, 4006.0], [1490.0, 4006.0], [1488.0, 4006.0], [1483.0, 4003.0], [1480.0, 4001.0], [1597.0, 4010.166666666667], [1596.0, 4008.75], [1595.0, 4006.777777777778], [1593.0, 4011.375], [1592.0, 4008.6666666666665], [1594.0, 4007.266666666666], [1600.0, 4220.014251781477]], "isOverall": false, "label": "All_Tasks", "isController": false}, {"data": [[1222.1549999999968, 4100.044999999995]], "isOverall": false, "label": "All_Tasks-Aggregated", "isController": false}, {"data": [[1530.0, 4002.0], [1532.0, 4003.0], [1529.0, 4008.0], [1528.0, 4001.0], [1527.0, 4004.0], [1526.0, 4003.0], [1513.0, 4006.0], [1507.0, 4003.0], [1506.0, 4005.0], [1594.0, 4003.0], [1597.0, 4008.5], [1572.0, 4003.0], [1571.0, 4004.0], [1574.0, 4005.0], [1573.0, 4004.0], [1576.0, 4012.0], [1575.0, 4007.0], [1578.0, 4005.0], [1577.0, 4007.0], [1581.0, 4008.0], [1579.0, 4006.0], [1583.0, 4013.0], [1582.0, 4032.0], [1596.0, 4006.8], [1595.0, 4003.5], [1593.0, 4007.0], [1592.0, 4006.0], [1591.0, 4005.0], [1590.0, 4002.0], [1589.0, 4003.5], [1588.0, 4004.3333333333335], [1587.0, 4011.5], [1586.0, 4010.5], [1585.0, 4006.0], [1584.0, 4008.5], [1566.0, 4004.0], [1542.0, 4001.0], [1541.0, 4002.0], [1550.0, 4003.0], [1549.0, 4008.0], [1565.0, 4003.0], [1559.0, 4011.0], [1558.0, 4026.2727272727275], [1556.0, 4017.3333333333335], [1557.0, 4012.5], [1554.0, 4025.0], [1553.0, 4034.0], [1600.0, 4014.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[1569.7300000000005, 4012.5499999999997]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1600.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.5899181E12, "maxY": 114958.33333333333, "series": [{"data": [[1.5899181E12, 114958.33333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.5899181E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5899181E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes/sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 4012.5499999999997, "minX": 1.5899181E12, "maxY": 4100.044999999995, "series": [{"data": [[1.5899181E12, 4057.6739999999986]], "isOverall": false, "label": "All_projects", "isController": false}, {"data": [[1.5899181E12, 4014.2019999999948]], "isOverall": false, "label": "All_users", "isController": false}, {"data": [[1.5899181E12, 4100.044999999995]], "isOverall": false, "label": "All_Tasks", "isController": false}, {"data": [[1.5899181E12, 4012.5499999999997]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5899181E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.5899181E12, "maxY": 4.9E-324, "series": [{"data": [[1.5899181E12, 0.0]], "isOverall": false, "label": "All_projects", "isController": false}, {"data": [[1.5899181E12, 0.0]], "isOverall": false, "label": "All_users", "isController": false}, {"data": [[1.5899181E12, 0.0]], "isOverall": false, "label": "All_Tasks", "isController": false}, {"data": [[1.5899181E12, 0.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5899181E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 4012.3899999999994, "minX": 1.5899181E12, "maxY": 4084.4200000000046, "series": [{"data": [[1.5899181E12, 4040.1369999999993]], "isOverall": false, "label": "All_projects", "isController": false}, {"data": [[1.5899181E12, 4014.0429999999974]], "isOverall": false, "label": "All_users", "isController": false}, {"data": [[1.5899181E12, 4084.4200000000046]], "isOverall": false, "label": "All_Tasks", "isController": false}, {"data": [[1.5899181E12, 4012.3899999999994]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5899181E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1.7976931348623157E308, "minX": 1.7976931348623157E308, "maxY": 4.9E-324, "series": [{"data": [], "isOverall": false, "label": "Max", "isController": false}, {"data": [], "isOverall": false, "label": "Min", "isController": false}, {"data": [], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 4.9E-324, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 4008.0, "minX": 51.0, "maxY": 4008.0, "series": [{"data": [[51.0, 4008.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 51.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time (ms)",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 51.0, "maxY": 4.9E-324, "series": [{"data": [[51.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 51.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency (ms)",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 51.666666666666664, "minX": 1.5899181E12, "maxY": 51.666666666666664, "series": [{"data": [[1.5899181E12, 51.666666666666664]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5899181E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 51.666666666666664, "minX": 1.5899181E12, "maxY": 51.666666666666664, "series": [{"data": [[1.5899181E12, 51.666666666666664]], "isOverall": false, "label": "Non HTTP response code: java.net.ConnectException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5899181E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses/sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.6666666666666667, "minX": 1.5899181E12, "maxY": 16.666666666666668, "series": [{"data": [[1.5899181E12, 16.666666666666668]], "isOverall": false, "label": "All_users-failure", "isController": false}, {"data": [[1.5899181E12, 1.6666666666666667]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}, {"data": [[1.5899181E12, 16.666666666666668]], "isOverall": false, "label": "All_Tasks-failure", "isController": false}, {"data": [[1.5899181E12, 16.666666666666668]], "isOverall": false, "label": "All_projects-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5899181E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
